{"version":3,"sources":["./src/app/user-profile/user-profile.component.ts","./src/app/user-profile/user-profile.component.html","./src/app/admin/admin-dashboard/admin-dashboard.component.ts","./src/app/admin/admin-dashboard/admin-dashboard.component.html","./src/app/officer/officer-report/officer-report.component.ts","./src/app/officer/officer-report/officer-report.component.html","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/officer/officer.module.ts","./src/app/officer/officer-complaint-status/officer-complaint-status.component.html","./src/app/officer/officer-complaint-status/officer-complaint-status.component.ts","./src/app/admin/services/admin-dash.service.ts","./src/app/services/user-complaints.service.ts","./src/app/admin/admin-login/admin-login.component.ts","./src/app/admin/admin-login/admin-login.component.html","./src/app/officer/services/complaint-registery.service.ts","./src/app/services/token-interceptor.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/user-login/user-login.component.ts","./src/app/user-login/user-login.component.html","./src/app/app.module.ts","./src/app/officer/services/officer-token-intercepter.service.ts","./src/app/admin/adm-auth.guard.ts","./src/app/officer/officer-auth-guard.guard.ts","./src/app/officer/complaint-registry/complaint-registry.component.html","./src/app/officer/complaint-registry/complaint-registry.component.ts","./src/app/user-complaints/user-complaints.component.html","./src/app/user-complaints/user-complaints.component.ts","./src/app/admin/admin-users-list/admin-users-list.component.html","./src/app/admin/admin-users-list/admin-users-list.component.ts","./src/app/officer/officer-login/officer-login.component.ts","./src/app/officer/officer-login/officer-login.component.html","./src/app/user-register/user-register.component.ts","./src/app/user-register/user-register.component.html","./src/app/admin/services/admin-auth.service.ts","./src/app/admin/admin.module.ts","./src/app/navbar/navbar.component.html","./src/app/navbar/navbar.component.ts","./src/app/services/auth.service.ts","./src/app/officer/officer-register/officer-register.component.ts","./src/app/officer/officer-register/officer-register.component.html","./src/app/admin/services/adm-token-intercepter.service.ts","./src/app/officer/officer-dashboard/officer-dashboard.component.ts","./src/app/officer/officer-dashboard/officer-dashboard.component.html","./src/app/complaint-status/complaint-status.component.html","./src/app/complaint-status/complaint-status.component.ts","./src/app/auth.guard.ts","./src/app/services/user-dashboard.service.ts","./src/app/admin/admin-report/admin-report.component.html","./src/app/admin/admin-report/admin-report.component.ts","./src/app/app-routing.module.ts","./src/app/officer/services/officer-auth.service.ts","./src/app/officer/services/officer-complaint-status.service.ts","./src/app/complaint-form/complaint-form.component.ts","./src/app/complaint-form/complaint-form.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\nimport Swal from 'sweetalert2'\r\n\r\n@Component({\r\n  selector: 'app-user-profile',\r\n  templateUrl: './user-profile.component.html',\r\n  styleUrls: ['./user-profile.component.css']\r\n})\r\nexport class UserProfileComponent implements OnInit {\r\n\r\n  constructor(private _userAuth:AuthService) { }\r\n  User:any;\r\n  ngOnInit(): void \r\n  {\r\n    this.User=this._userAuth.getUser(localStorage.getItem('User Email')).subscribe\r\n    (\r\n      res=>\r\n      {\r\n       \r\n        this.User=res;\r\n        this.User['isEdit']=false; \r\n      },\r\n      err=>\r\n      {\r\n        console.log(err)\r\n      }\r\n    )\r\n    \r\n  }\r\n\r\n\r\n  update(user)\r\n  {\r\n      var UserData={\r\n      \"_id\":user._id,\r\n      \"firstname\":user.firstname,\r\n      \"lastname\":user.lastname,\r\n      \"mobile_number\":user.mobile_number,\r\n      \"address\":user.address\r\n    }\r\n    \r\n      this._userAuth.updateUser(UserData).subscribe\r\n      (\r\n          res=>\r\n          {\r\n            user.isEdit=false;\r\n            this.ngOnInit();\r\n            Swal.fire(\"Good job!\", \"Profile Updated Successfully!\", \"success\");\r\n          },\r\n          err=>\r\n          {\r\n            console.log(err)\r\n          }\r\n\r\n      )\r\n  }\r\n\r\n\r\n  isEdit(user)\r\n  {\r\n    user.isEdit=true;\r\n  }\r\n  cancel(user)\r\n  {\r\n    user.isEdit=false;\r\n    this.ngOnInit();\r\n  }\r\n  \r\n\r\n}\r\n","<div class=\"container\">\r\n    <br>\r\n    <div class=\"text-light text-center m-3\">\r\n        <h3>My Profile</h3>\r\n    </div>\r\n\r\n    <div class=\"text-light m-3\">\r\n\r\n        <h4><b>First Name </b> </h4>\r\n        <h5>\r\n            <div *ngIf=\"User.isEdit\">\r\n                <input type=\"text\" [(ngModel)]=\"User.firstname\">\r\n            </div>\r\n        \r\n            <div *ngIf=\"!User.isEdit\">\r\n                <span>{{User.firstname}}</span>\r\n            </div>\r\n        </h5>\r\n        <br/>\r\n\r\n        <h4><b>Last Name </b> </h4>\r\n        <h5>\r\n            <div *ngIf=\"User.isEdit\">\r\n                <input type=\"text\" [(ngModel)]=\"User.lastname\">\r\n            </div>\r\n        \r\n            <div *ngIf=\"!User.isEdit\">\r\n                <span>{{User.lastname}}</span>\r\n            </div>\r\n        </h5>\r\n        <br/>\r\n\r\n        <h4><b>Mobile Number </b> </h4>\r\n        <h5>\r\n            <div *ngIf=\"User.isEdit\">\r\n                <input type=\"text\" [(ngModel)]=\"User.mobile_number\">\r\n            </div>\r\n        \r\n            <div *ngIf=\"!User.isEdit\">\r\n                <span>{{User.mobile_number}}</span>\r\n            </div>\r\n        </h5>\r\n        <br/>\r\n\r\n\r\n        <h4><b>Address </b> </h4>\r\n        <h5>\r\n            <div *ngIf=\"User.isEdit\">\r\n                <input type=\"text\" [(ngModel)]=\"User.address\">\r\n            </div>\r\n        \r\n            <div *ngIf=\"!User.isEdit\">\r\n                <span>{{User.address}}</span>\r\n            </div>\r\n        </h5>\r\n        <br/>\r\n\r\n\r\n            <h4><b>Action : </b></h4>\r\n            <div  *ngIf=\"!User.isEdit\">\r\n                <button class=\"btn btn-info m-1\" (click)=\"isEdit(User)\">Edit</button>\r\n            </div>\r\n            <div *ngIf=\"User.isEdit\">\r\n                <button class=\"btn btn-success m-1\" (click)=\"update(User)\">Update</button>\r\n                <button class=\"btn btn-primary m-1\" (click)=\"cancel(User)\">Cancel</button>\r\n            </div>\r\n   \r\n   </div>\r\n</div>\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AdminDashService } from '../services/admin-dash.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-dashboard',\r\n  templateUrl: './admin-dashboard.component.html',\r\n  styleUrls: ['./admin-dashboard.component.css']\r\n})\r\nexport class AdminDashboardComponent implements OnInit {\r\n\r\n  constructor(private _adminDash:AdminDashService, private _route:Router) { }\r\n\r\n  ngOnInit(): void \r\n  {\r\n    this._adminDash.getDashboard().subscribe\r\n    (\r\n      res=>\r\n      { \r\n      },\r\n      err=>\r\n      {\r\n        if(err instanceof HttpErrorResponse)\r\n              {\r\n                if(err.status ===401)\r\n                {\r\n                  console.log(err)\r\n                    this._route.navigate(['/admlogin']);\r\n                }\r\n              }\r\n      }\r\n\r\n    )\r\n\r\n  }\r\n\r\n\r\n  createOfficerAccount()\r\n  {\r\n    this._route.navigate(['/officerregister'])\r\n  }\r\n  allreport()\r\n  {\r\n    this._route.navigate(['/admin-report'])\r\n  }\r\n\r\n\r\n\r\n  allUsers()\r\n  {\r\n    this._route.navigate(['/all-users'])\r\n  }\r\n\r\n\r\n}\r\n","<br>\r\n\r\n<div class=\"container text-white\">\r\n    <div class=\"row\">\r\n        <div (click)=\"createOfficerAccount()\" class=\"col-sm m-3 text-center\">\r\n            <img src=\"assets/Images/admdashboard/officer.ico\" height=\"75px\" width=\"75px\">\r\n            <h4>Create Officer Account</h4>\r\n        </div>\r\n\r\n        <div (click)=\"allUsers()\" class=\"col-sm m-3 text-center\">\r\n            <img src=\"assets/Images/dashboard/user.png\" height=\"75px\" width=\"75px\">\r\n            <h4>All Users</h4>\r\n        </div>\r\n\r\n        <div (click)=\"allreport()\" class=\"col-sm m-3 text-center\">\r\n            <img src=\"assets/Images/dashboard/report.png\" height=\"75px\" width=\"75px\">\r\n            <h4>All Report</h4>\r\n        </div>\r\n        \r\n      </div> \r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ComplaintRegisteryService } from '../services/complaint-registery.service';\r\n\r\n@Component({\r\n  selector: 'app-officer-report',\r\n  templateUrl: './officer-report.component.html',\r\n  styleUrls: ['./officer-report.component.css']\r\n})\r\nexport class OfficerReportComponent implements OnInit {\r\n\r\n  constructor(private _complaints:ComplaintRegisteryService) { }\r\n  Complaints:any;\r\n  FilterData:any;\r\n\r\n\r\n  PendingCount:number=0;\r\n  OnProgressCount:number=0;\r\n  RejectedCount:number=0;\r\n  CompletedCount:number=0;\r\n\r\n\r\n  ngOnInit(): void \r\n  {\r\n    this.FilterData={\r\n      \"department\":localStorage.getItem(\"Officer Department\"),\r\n      \"location\":localStorage.getItem(\"Officer Location\")\r\n      }\r\n\r\n      this._complaints.getComplaints(this.FilterData).subscribe\r\n      (\r\n\r\n        res=>\r\n        {\r\n          this.Complaints=res\r\n          for (let complaint of this.Complaints)\r\n          {\r\n            if(complaint.complaint_status==\"On Progress\")\r\n            this.OnProgressCount=this.OnProgressCount+1;\r\n            else if(complaint.complaint_status==\"Pending\")\r\n            this.PendingCount=this.PendingCount+1;\r\n            else if(complaint.complaint_status==\"Rejected\")\r\n            this.RejectedCount=this.RejectedCount+1;\r\n            else if(complaint.complaint_status==\"Completed\")\r\n            this.CompletedCount=this.CompletedCount+1;\r\n          }\r\n        },\r\n        err=>\r\n        {\r\n          console.log(err)\r\n        }\r\n      \r\n      )\r\n\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <br>\r\n    <div class=\"text-light text-center m-3\">\r\n        <h3>Complaint Report</h3>\r\n    </div>\r\n\r\n    <br>\r\n    <div class=\"text-light m-3\">\r\n        \r\n        <table>\r\n            <tr>\r\n              <td><h4><b>Pending :   </b> </h4></td>\r\n              <td><h5>{{PendingCount}}</h5></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><h4><b>On Progress :   </b> </h4></td>\r\n                <td><h5>{{OnProgressCount}}</h5></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><h4><b>Rejected :   </b> </h4></td>\r\n                <td><h5>{{RejectedCount}}</h5></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><h4><b>Completed :   </b> </h4></td>\r\n                <td><h5>{{CompletedCount}}</h5></td>\r\n            </tr>\r\n              \r\n          </table>\r\n    </div>\r\n\r\n   \r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.css']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container text-white\">\r\n\r\n    \r\n    <h1 class=\"text-center p-3 head\">Complaint Management System</h1>\r\n    <br>\r\n    <h2 style=\"color:aqua; font-family:'Times New Roman', Times, serif;\">About Web Portal </h2>\r\n    <br>\r\n    <p class=\"font-italic paragraph\">This is Online Complaint Registration and Management system (street light, water pipe leakage, rain water drainage, road).</p>\r\n\r\n    <p class=\"font-italic paragraph\">The main purpose of this project is to help the \r\n        public in knowing their place details and getting \r\n        their problems solved in online without going to \r\n        the officer regularly until the problem is solved. \r\n        By this system the public can save his time and \r\n        eradicate corruption in government offices. \r\n        Its main purpose is to provide a smart and easy way \r\n        through web Application for Complaint registration \r\n        and its Tracking and eradicating system and thus \r\n        to prevent Corruption. We want to develop an we \r\n        application for complaint management system where \r\n        public can register complaints for street light, \r\n        water pipe leakage, rain water drainage, road \r\n        reconstruction and garbage system. \r\n        Online Road Complaints Registration System To \r\n        transform the existing manual compliant management system into an automate system. \r\n        For the better management of complaints to improve efficiency. \r\n        All the peoples living in housing schemes societies can used our web application for the registration of their complaints within India.</p>\r\n\r\n        <br>\r\n\r\n        <h3>System Modules:</h3>\r\n        <br>\r\n        <p class=\"title\">User</p>\r\n        <ul class=\"list\">\r\n            <li>Login</li>\r\n            <li>Register</li>\r\n            <li>Post Complaint</li>\r\n            <li>View complaint status</li>\r\n            <li>View profile</li>\r\n        </ul>\r\n\r\n        <br>\r\n        <p class=\"title\">Officer</p>\r\n        <ul class=\"list\">\r\n            <li>Login</li>\r\n            <li>Register</li>\r\n            <li>View Complaint</li>\r\n            <li>Update complaint status</li>\r\n            <li>Update proof of work</li>\r\n        </ul>\r\n\r\n        <br>\r\n        <p class=\"title\">Admin</p>\r\n        <ul class=\"list\">\r\n            <li>Login</li>\r\n            <li>Generate id & password for officer</li>\r\n            <li>The administrator has the full-fledged rights over the OES.</li>\r\n            <li>Can view the accounts.</li>\r\n        </ul>\r\n\r\n\r\n\r\n        <br>\r\n        <h2 style=\"color:aqua; font-family:'Times New Roman', Times, serif;\">About Devloper </h2>\r\n        \r\n        <div class=\"col-md\">\r\n            <div class=\"row p-3\">\r\n\r\n           \r\n                <div class=\"about p-3\">\r\n                    <p>Name : Chirag Rathod </p>\r\n                    <p>About : Full Stack Developer, Passionate about Technology, An Engineering Student at Rk University.</p>\r\n                    <p>Email : rathodchirag183@gmail.com </p>\r\n                </div>\r\n            \r\n                <div>\r\n                    <img class=\"float-right\"  src=\"assets/Images/developer.png\" height=\"200px\" width=\"150px\">\r\n                </div>\r\n            \r\n\r\n            </div>\r\n        </div>\r\n        \r\n       \r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid\">\r\n    <h1 class=\"text-center p-3 head\">Complaint Management System</h1>\r\n    <img src=\"assets/Images/complaint.jpg\" class=\"mx-auto d-block img-fluid p-5\">\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OfficerRegisterComponent } from './officer-register/officer-register.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { OfficerLoginComponent } from './officer-login/officer-login.component';\r\nimport { OfficerDashboardComponent } from './officer-dashboard/officer-dashboard.component';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { OfficerTokenIntercepterService } from './services/officer-token-intercepter.service';\r\nimport { ComplaintRegistryComponent } from './complaint-registry/complaint-registry.component';\r\n\r\nimport { OfficerComplaintStatusComponent } from './officer-complaint-status/officer-complaint-status.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { OfficerReportComponent } from './officer-report/officer-report.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [OfficerRegisterComponent, OfficerLoginComponent, OfficerDashboardComponent, ComplaintRegistryComponent, OfficerComplaintStatusComponent, OfficerReportComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule\r\n  ],\r\n  exports:[\r\n    OfficerRegisterComponent\r\n  ],\r\n  providers:[\r\n    {\r\n      provide:HTTP_INTERCEPTORS,\r\n      useClass:OfficerTokenIntercepterService,\r\n      multi:true\r\n    },]\r\n})\r\nexport class OfficerModule { }\r\n","<div class=\"container\">\r\n    <br>\r\n    <div class=\"text-light text-center m-3\">\r\n        <h3>Complaint Status</h3>\r\n    </div>\r\n\r\n    <div class=\"text-light m-3\">\r\n\r\n\r\n        <h4><b>Name </b> </h4>\r\n        <h5>\r\n            <div>\r\n                <span>{{Complaint_Status.name}}</span>\r\n            </div>\r\n        </h5>\r\n        <br/>\r\n\r\n        <h4><b>Status </b> </h4>\r\n        <h5>\r\n            <div *ngIf=\"Complaint_Status.isEdit\">\r\n\r\n                <select  class=\"form-control form-select\" (change)=\"onChangeComplaintStatus($event)\">\r\n                    <option value=null selected>Select complaint Level</option>\r\n                    <option *ngFor=\"let Status of Complaint_Status_Array\" [value]=\"Status.Name\">\r\n                        {{Status.Name}}\r\n                      </option>\r\n                      \r\n                </select>\r\n            </div>\r\n        \r\n            <div *ngIf=\"!Complaint_Status.isEdit\">\r\n                <span>{{Complaint_Status.complaint_status}}</span>\r\n            </div>\r\n        </h5>\r\n        <br/>\r\n\r\n\r\n\r\n        <h4><b>Complaint Image </b> </h4>\r\n        <h5>\r\n            <img src={{Complaint_Status.complaint_image}} width=\"200\" height=\"200\">\r\n        </h5>\r\n        <br/>\r\n\r\n        <h4><b>Reason </b> </h4>\r\n        <h5>\r\n            <div *ngIf=\"Complaint_Status.isEdit\">\r\n                <input type=\"text\" [(ngModel)]=\"Complaint_Status.reason\">\r\n            </div>\r\n        \r\n            <div *ngIf=\"!Complaint_Status.isEdit\">\r\n                <span>{{Complaint_Status.reason}}</span>\r\n            </div>\r\n        </h5>\r\n        <br/>\r\n\r\n        <h4><b>Solutions </b> </h4>\r\n        <h5>\r\n            <div *ngIf=\"Complaint_Status.isEdit\">\r\n                <input type=\"text\" [(ngModel)]=\"Complaint_Status.solution\">\r\n            </div>\r\n        \r\n            <div *ngIf=\"!Complaint_Status.isEdit\">\r\n                <span>{{Complaint_Status.solution}}</span>\r\n            </div>\r\n        </h5>\r\n        <br/>\r\n\r\n        <h4><b>Complaint Proof </b> </h4>\r\n        <h5>\r\n            <div *ngIf=\"Complaint_Status.isEdit\">\r\n            \r\n                    <label >Upload An Image</label>\r\n                    <br>\r\n                    <input type=\"file\" (change)=\"onImageSelected($event)\" >  \r\n            </div>\r\n\r\n            <div *ngIf=\"!Complaint_Status.isEdit && Complaint_Status.officer_proof\">\r\n                <img src={{Complaint_Status.officer_proof}} width=\"200\" height=\"200\">\r\n            </div>\r\n\r\n           \r\n        </h5>\r\n\r\n\r\n                    <!-- Image Preview -->\r\n            <div class=\"imagePreview\" *ngIf=\"imageURL && imageURL !== ''\">\r\n                <img [src]=\"imageURL\" height=\"150px\" width=\"150px\" >\r\n            </div>\r\n\r\n            <div *ngIf=\"Complaint_Status.isEdit\"> \r\n                <span\r\n                  *ngIf=\"imageSizeError\"\r\n                   class=\"text-danger\">Please insert Below 1MB File Size.  \r\n                </span>\r\n            </div>\r\n            <div *ngIf=\"Complaint_Status.isEdit\"> \r\n                <span\r\n                  *ngIf=\"fileTypeError\"\r\n                   class=\"text-danger\">Please insert Only JPEG and PNG File.  \r\n                </span>\r\n            </div>\r\n     \r\n        <br/>\r\n    \r\n\r\n    \r\n\r\n            <h4><b>Action : </b></h4>\r\n            <div  *ngIf=\"!Complaint_Status.isEdit\">\r\n                <button class=\"btn btn-info m-1\" (click)=\"isEdit(Complaint_Status)\">Edit</button>\r\n            </div>\r\n            <div *ngIf=\"Complaint_Status.isEdit\">\r\n                <button class=\"btn btn-success m-1\" (click)=\"update(Complaint_Status)\">Update</button>\r\n                <button class=\"btn btn-primary m-1\" (click)=\"cancel(Complaint_Status)\">Cancel</button>\r\n            </div>\r\n\r\n              \r\n   </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { OfficerComplaintStatusService } from '../services/officer-complaint-status.service';\r\nimport { Complaint_Status_Class } from './Complaint_Status_Class';\r\n\r\n@Component({\r\n  selector: 'app-officer-complaint-status',\r\n  templateUrl: './officer-complaint-status.component.html',\r\n  styleUrls: ['./officer-complaint-status.component.css']\r\n})\r\nexport class OfficerComplaintStatusComponent implements OnInit {\r\n\r\n  constructor(private _activityrouter:ActivatedRoute, private _complaintStatusService:OfficerComplaintStatusService) { }\r\n\r\n  Complaint_Status:any;\r\n  ComplaintStatusSelected:any;\r\n  Complaint_Status_Array:Complaint_Status_Class[];\r\n  Complaint_ID:any;\r\n\r\n  //image uploading variables...\r\n  imageSizeError:boolean=false;\r\n  fileTypeError:boolean=false;\r\n  Extentions:string;\r\n  imageURL=\"\";\r\n  complaintImageFile:any=null;\r\n\r\n\r\n\r\n  ngOnInit(): void\r\n   {\r\n          this.Complaint_Status_Array=[\r\n            {Id:1,Name:\"Pending\"},\r\n            {Id:2,Name:\"On Progress\"},\r\n            {Id:3,Name:\"Rejected\"},\r\n            {Id:4,Name:\"Completed\"},\r\n          ]\r\n\r\n        this._activityrouter.paramMap.subscribe(\r\n          (params: any) => {\r\n            this.Complaint_ID= params.get('id');\r\n          }\r\n        )\r\n        this._complaintStatusService.getComplaintStatus(this.Complaint_ID).subscribe(\r\n          res=>\r\n          {\r\n            this.Complaint_Status=res[0]\r\n            this.Complaint_Status.forEach(element => {\r\n              element['isEdit']=false;\r\n            });\r\n          },\r\n          err=>\r\n          {\r\n            console.log(err);\r\n          }\r\n\r\n        )\r\n  }\r\n  update(complaint)\r\n  {\r\n      var ComplaintsData=new FormData();\r\n      ComplaintsData.append(\"_id\",complaint._id)\r\n      ComplaintsData.append(\"complaint_status\",this.ComplaintStatusSelected)\r\n      ComplaintsData.append(\"reason\",complaint.reason)\r\n      ComplaintsData.append(\"officer_proof\",this.complaintImageFile)\r\n      ComplaintsData.append(\"solution\",complaint.solution)\r\n     \r\n      \r\n      this._complaintStatusService.updateComplaintStatus(ComplaintsData).subscribe(\r\n \r\n      res=>\r\n      {\r\n        this.imageSizeError=false;\r\n        this.fileTypeError=false;\r\n        this.imageURL=null\r\n        complaint.isEdit=false;\r\n        this.ngOnInit();\r\n      },\r\n      err=>\r\n      {\r\n        if(err.status==413)\r\n        {\r\n          this.imageSizeError=true;\r\n        }\r\n        if(err.status==402)\r\n        {\r\n          this.fileTypeError=true;\r\n        }\r\n        console.log(err)\r\n      }\r\n\r\n      )\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n  isEdit(complaint)\r\n  {\r\n    complaint.isEdit=true;\r\n  }\r\n  cancel(complaint)\r\n  {\r\n    complaint.isEdit=false;\r\n    this.imageSizeError=false;\r\n    this.imageURL=null\r\n    this.ngOnInit();\r\n  }\r\n  \r\n\r\n  onChangeComplaintStatus(event): void \r\n  { \r\n    this.ComplaintStatusSelected= event.target.value;\r\n  }\r\n\r\n  onImageSelected(event)\r\n  {\r\n    this.complaintImageFile=<File>event.target.files[0]\r\n    \r\n    // File Preview\r\n      var reader = new FileReader();\r\n      reader.onload = () => {\r\n        this.imageURL = reader.result as string;\r\n      }\r\n      this.Extentions=this.complaintImageFile.name.split('.').pop()\r\n     \r\n      if(this.Extentions.toUpperCase()=='JPG' || this.Extentions.toUpperCase()=='JPEG' || this.Extentions.toUpperCase()=='PNG')\r\n        reader.readAsDataURL(this.complaintImageFile)\r\n      else\r\n      {\r\n        this.imageURL=null\r\n        \r\n      }\r\n  }\r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminDashService {\r\n\r\n  private _adminDashboardURL=\"api/admdash\";\r\n  private _getAllComplaintsURL=\"api/officergetcomplaints\";\r\n  private _getAllUsersURL=\"api/users\";\r\n  private _DeleteUserURL=\"api/user/\";\r\n  constructor(private http:HttpClient) { }\r\n\r\n  getDashboard()\r\n  {\r\n    return this.http.get(this._adminDashboardURL)\r\n  }\r\n\r\n  getAllComplaints()\r\n  {\r\n    return this.http.get(this._getAllComplaintsURL)\r\n  }\r\n\r\n  getAllUsers()\r\n  {\r\n    return this.http.get(this._getAllUsersURL)\r\n  }\r\n\r\n  deleteUser(user)\r\n  {\r\n    return this.http.delete(this._DeleteUserURL+user._id)\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { map } from 'rxjs/operators';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserComplaintsService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n  getcomplaints_URL=\"api/complaints/\"\r\n  getcomplaintStatus_URL=\"api/complaintstatus/\"\r\n  getComplaints(email)\r\n  {\r\n    return this.http.get(this.getcomplaints_URL+email).pipe(map((res:Response) => res.json()));\r\n  }\r\n\r\n  getComplaintStatus(id)\r\n  {\r\n    return this.http.get(this.getcomplaintStatus_URL+id,{responseType: 'text' })\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { OfficerAuthService } from 'src/app/officer/services/officer-auth.service';\r\nimport { AuthService } from '../../services/auth.service';\r\nimport { AdminAuthService } from '../services/admin-auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-admin-login',\r\n  templateUrl: './admin-login.component.html',\r\n  styleUrls: ['./admin-login.component.css']\r\n})\r\n\r\nexport class AdminLoginComponent implements OnInit {\r\n\r\n  somthingWrong:boolean=false;\r\n  AdminLoginForm:FormGroup;\r\n  constructor(private _router:Router, private _auth:AdminAuthService, private _userAuth:AuthService,  private _officerAuth:OfficerAuthService) { }\r\n\r\n  closeDangerAlert()\r\n  {\r\n      this.somthingWrong=false;\r\n  }\r\n  ngOnInit(): void \r\n  {\r\n    this.AdminLoginForm=new FormGroup\r\n    (\r\n          {\r\n              'Email':new FormControl(null,[Validators.required,Validators.email]),\r\n              'Password':new FormControl(null,Validators.required),\r\n          \r\n          }\r\n    );\r\n  }\r\n\r\n\r\n\r\n  onLoginSubmit()\r\n  {\r\n    if(this.AdminLoginForm.valid)\r\n    {\r\n         this._auth.adminLogin(this.AdminLoginForm.value).subscribe\r\n         (\r\n             res=>\r\n                 {    \r\n                   \r\n                    this.somthingWrong=false; \r\n                    localStorage.setItem('Admin Token',res['token']);\r\n                    localStorage.setItem('Admin Email',res['email']);\r\n                    this.AdminLoginForm.reset();\r\n                    this._userAuth.logoutUser()\r\n                    this._officerAuth.logoutOfficer()\r\n                    this._router.navigate(['/admdashboard'])\r\n                    \r\n                 },\r\n             err=>{\r\n                    this.somthingWrong=true;\r\n                    console.log(err)\r\n                 }\r\n         )    \r\n     }\r\n     else\r\n     {\r\n         this.AdminLoginForm.get('Email').markAsTouched();\r\n         this.AdminLoginForm.get('Password').markAsTouched();\r\n         return;\r\n     }\r\n  }\r\n\r\n}\r\n","<div class=\"container text-white\">\r\n\r\n    <h2 class=\"text-center p-3\">Admin Login</h2>\r\n    \r\n  \r\n    <div *ngIf=\"somthingWrong\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n      <strong>Danger!</strong> Something went wrong\r\n      <button (click)=\"closeDangerAlert()\" type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n  \r\n  \r\n  <form class=\"m-5\" [formGroup]=\"AdminLoginForm\" (ngSubmit)=\"onLoginSubmit()\">\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input formControlName=\"Email\" type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"Enter your email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\">\r\n        <span\r\n        *ngIf=\"!AdminLoginForm.get('Email').valid && AdminLoginForm.get('Email').touched\"\r\n         class=\"text-danger\">Enter email here... </span>\r\n      </div>\r\n      <div class=\"form-group\">\r\n          <label for=\"password\">Password</label>\r\n          <input formControlName=\"Password\" type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" placeholder=\"Enter your password\">\r\n          <span\r\n          *ngIf=\"!AdminLoginForm.get('Password').valid && AdminLoginForm.get('Password').touched\"\r\n           class=\"text-danger\">Enter Password here... </span>\r\n  \r\n      </div>\r\n       <button type=\"reset\" class=\"btn btn-danger\">Reset</button>\r\n       <button type=\"submit\" class=\"btn btn-primary m-3\">Login</button>\r\n  </form>\r\n  </div>     \r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComplaintRegisteryService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n  Complaint_Registry_URL=\"api/complaintregistry\"\r\n  getComplaints(data)\r\n  {\r\n    return this.http.post(this.Complaint_Registry_URL,data)\r\n  }\r\n}\r\n","import { HttpInterceptor } from '@angular/common/http';\r\nimport { Injectable,Injector } from '@angular/core';\r\nimport { AdminAuthService } from '../admin/services/admin-auth.service';\r\nimport { AuthService } from './auth.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenInterceptorService implements HttpInterceptor{\r\n\r\n  constructor(private injector:Injector) { }\r\n\r\n  intercept(req, next)\r\n  {\r\n      var url:String=req.url\r\n      //url.split('/')[1]==\"login\"\r\n      console.log(url.split('/')[3])\r\n      if(url.split('/')[3]!=\"admlogin\" && url.split('/')[3]!=\"admdash\" && url.split('/')[3]!=\"officerlogin\" && url.split('/')[3]!=\"officerdash\" && url.split('/')[3]!=\"complaintregistry\" && url.split('/')[3]!=\"officercomplaintstatus\" && url.split('/')[3]!=\"officergetcomplaints\" && url.split('/')[3]!=\"users\" && url.split('/')[3]!=\"user\")\r\n      {  \r\n          let authService =this.injector.get(AuthService);\r\n            let tokenizedReq=req.clone({\r\n              setHeaders:{\r\n                Authorization:'Bearear '+authService.getToken()\r\n              }\r\n            })\r\n            console.log(\"User Token :\"+authService.getToken())\r\n            return next.handle(tokenizedReq);\r\n      }\r\n      else\r\n      {\r\n        return next.handle(req);\r\n      }\r\n\r\n  }\r\n}\r\n\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserDashboardService } from '../services/user-dashboard.service';\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  CurrentLoginEmail:string;\r\n  \r\n\r\n  constructor(private _userDashboard:UserDashboardService, private _router:Router) { \r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    \r\n    this.CurrentLoginEmail=localStorage.getItem('User Email');\r\n    this._userDashboard.getDashboard().subscribe\r\n    (\r\n          res=>\r\n          {\r\n              \r\n          },\r\n          err=>\r\n          {\r\n              if(err instanceof HttpErrorResponse)\r\n              {\r\n                if(err.status ===401)\r\n                {\r\n                    this._router.navigate(['/login']);\r\n                }\r\n              }\r\n          }\r\n    )\r\n  }\r\n\r\n\r\n\r\n  //methods\r\n  postComplaint()\r\n  {\r\n    this._router.navigate(['/complaint'])\r\n  }\r\n\r\n  myComplaints()\r\n  {\r\n    this._router.navigate(['/mycomplaints'])\r\n  }\r\n\r\n  myProfile()\r\n  {\r\n    this._router.navigate(['/profile'])\r\n  }\r\n\r\n}\r\n","<br>\r\n<div class=\"text-success m-3\">\r\n    <h5>Login as : {{CurrentLoginEmail}}</h5>\r\n</div>\r\n<br>\r\n<div class=\"container text-white\">\r\n    \r\n    <div class=\"row\">\r\n        <div (click)=\"postComplaint()\" class=\"col-sm m-3 text-center\">\r\n            <img src=\"assets/Images/dashboard/message.png\" height=\"45px\" width=\"45px\">\r\n            <h4>Post Complaint</h4>\r\n        </div>\r\n\r\n        <div (click)=\"myComplaints()\" class=\"col-sm m-3 text-center\">\r\n            <img src=\"assets/Images/dashboard/status.png\" height=\"45px\" width=\"45px\">\r\n            <h4>My Complaints</h4>\r\n        </div>\r\n\r\n        <div (click)=\"myProfile()\" class=\"col-sm m-3 text-center\">\r\n            <img src=\"assets/Images/dashboard/user.png\" height=\"45px\" width=\"45px\">\r\n            <h4>My Profile</h4>\r\n        </div>\r\n      </div> \r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'online-cms';\r\n}\r\n","<app-navbar></app-navbar>\r\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup ,FormControl,Validators} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AdminAuthService } from '../admin/services/admin-auth.service';\r\nimport { OfficerAuthService } from '../officer/services/officer-auth.service';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-user-login',\r\n  templateUrl: './user-login.component.html',\r\n  styleUrls: ['./user-login.component.css']\r\n})\r\nexport class UserLoginComponent implements OnInit {\r\n\r\n  somthingWrong:boolean=false;\r\n  LoginForm:FormGroup;\r\n  EmailWrongError=false;\r\n  PasswordWrongError=false;\r\n\r\n  constructor(private _auth:AuthService, private _router:Router, private _adminAuth:AdminAuthService, private _officrAuth:OfficerAuthService) { }\r\n\r\n  closeDangerAlert()\r\n  {\r\n      this.somthingWrong=false;\r\n  }\r\n\r\n  ngOnInit(): void \r\n  {\r\n    this.LoginForm=new FormGroup\r\n    (\r\n          {\r\n              'Email':new FormControl(null,[Validators.required,Validators.email]),\r\n              'Password':new FormControl(null,Validators.required),\r\n          \r\n          }\r\n    );\r\n  }\r\n\r\n  onLoginSubmit()\r\n  {\r\n    if(this.LoginForm.valid)\r\n    {\r\n         this._auth.loginUser(this.LoginForm.value).subscribe\r\n         (\r\n             res=>\r\n                 {    \r\n                   \r\n                    this.somthingWrong=false; \r\n                    localStorage.setItem('User Token',res['token']);\r\n                    localStorage.setItem('User Email',res['email']);\r\n                    this.LoginForm.reset();\r\n                    this._adminAuth.logoutAdmin();\r\n                    this._officrAuth.logoutOfficer();\r\n                    this._router.navigate(['/dashboard'])\r\n                    \r\n                 },\r\n             err=>{\r\n\r\n                  if(err.status==400)\r\n                      this.EmailWrongError=true\r\n                  if(err.status==401)\r\n                      this.PasswordWrongError=true\r\n                  if(err.status==404)\r\n                      this.somthingWrong=true;\r\n                  console.log(err)\r\n                 }\r\n         )    \r\n     }\r\n     else\r\n     {\r\n         this.LoginForm.get('Email').markAsTouched();\r\n         this.LoginForm.get('Password').markAsTouched();\r\n         return;\r\n     }\r\n  }\r\n}","<div class=\"container text-white\">\r\n\r\n  <h2 class=\"text-center p-3\">User Login</h2>\r\n  \r\n\r\n  <div *ngIf=\"somthingWrong\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n    <strong>Danger!</strong> Something went wrong\r\n    <button (click)=\"closeDangerAlert()\" type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n\r\n\r\n<form class=\"m-5\" [formGroup]=\"LoginForm\" (ngSubmit)=\"onLoginSubmit()\">\r\n    \r\n    <div class=\"form-group\">\r\n      <label for=\"email\">Email</label>\r\n      <input formControlName=\"Email\" type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"Enter your email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\">\r\n      <span\r\n      *ngIf=\"!LoginForm.get('Email').valid && LoginForm.get('Email').touched\"\r\n       class=\"text-danger\">Enter email here... </span>\r\n\r\n       <div  *ngIf=\"EmailWrongError\" class=\"text-danger\">\r\n        Sorry email is not registred!\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"password\">Password</label>\r\n      <input formControlName=\"Password\" type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" placeholder=\"Enter your password\">\r\n      <span\r\n      *ngIf=\"!LoginForm.get('Password').valid && LoginForm.get('Password').touched\"\r\n       class=\"text-danger\">Enter Password here... </span>\r\n       <div *ngIf=\"PasswordWrongError\" class=\"text-danger\">\r\n        Password is wrong!\r\n      </div>\r\n\r\n  </div>\r\n   \r\n     <button type=\"reset\" class=\"btn btn-danger\">Reset</button>\r\n     <button type=\"submit\" class=\"btn btn-primary m-3\">Login</button>\r\n</form>\r\n</div>     ","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { UserLoginComponent } from './user-login/user-login.component';\r\nimport { UserRegisterComponent } from './user-register/user-register.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http'\r\nimport { AuthService } from './services/auth.service';\r\nimport { AuthGuard } from './auth.guard';\r\nimport {TokenInterceptorService} from './services/token-interceptor.service';\r\nimport { UserDashboardService } from './services/user-dashboard.service';\r\nimport { ComplaintFormComponent } from './complaint-form/complaint-form.component';\r\nimport { UserComplaintsComponent } from './user-complaints/user-complaints.component';\r\nimport { ComplaintStatusComponent } from './complaint-status/complaint-status.component';\r\nimport { AdminModule } from './admin/admin.module';\r\n\r\nimport { OfficerModule } from './officer/officer.module';\r\nimport { UserProfileComponent } from './user-profile/user-profile.component';\r\nimport { AboutComponent } from './about/about.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UserLoginComponent,\r\n    UserRegisterComponent,\r\n    DashboardComponent,\r\n    NavbarComponent,\r\n    HomeComponent,\r\n    ComplaintFormComponent,\r\n    UserComplaintsComponent,\r\n    ComplaintStatusComponent,\r\n    UserProfileComponent,\r\n    AboutComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    AdminModule,\r\n    OfficerModule\r\n  ],\r\n  providers: [\r\n    AuthService,UserDashboardService,AuthGuard,\r\n    {\r\n    provide:HTTP_INTERCEPTORS,\r\n    useClass:TokenInterceptorService,\r\n    multi:true\r\n    },\r\n  \r\n],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { HttpInterceptor } from '@angular/common/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { OfficerAuthService } from './officer-auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OfficerTokenIntercepterService implements HttpInterceptor {\r\n\r\n  constructor(private injector:Injector) { }\r\n\r\n  intercept(req, next)\r\n  {\r\n    var url:String=req.url\r\n    if(url.split('/')[3]!=\"admlogin\" && url.split('/')[3]!=\"admdash\" && url.split('/')[3]!=\"complaints\" && url.split('/')[3]!=\"users\" && url.split('/')[3]!=\"user\")\r\n    {  \r\n        let authService =this.injector.get(OfficerAuthService);\r\n          let tokenizedReq=req.clone({\r\n            setHeaders:{\r\n              Authorization:'Bearear '+authService.getToken()\r\n            }\r\n          })\r\n          return next.handle(tokenizedReq);\r\n    }\r\n    else\r\n    {\r\n      return next.handle(req);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\r\n\r\nimport { AdminAuthService } from './services/admin-auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdmAuthGuard implements CanActivate {\r\n  constructor(private _authService:AdminAuthService, private _router:Router)\r\n  {}\r\n\r\n  canActivate(): boolean\r\n  {\r\n    if(this._authService.adminLoggedIn())\r\n    {\r\n      return true;\r\n    }\r\n    else{\r\n      this._router.navigate(['/admlogin'])\r\n      return false;\r\n    }\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { OfficerAuthService } from './services/officer-auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OfficerAuthGuardGuard implements CanActivate {\r\n  constructor(private _authService:OfficerAuthService, private _router:Router)\r\n  {}\r\n\r\n  canActivate(): boolean\r\n  {\r\n    if(this._authService.OfficerLoggedIn())\r\n    {\r\n      return true;\r\n    }\r\n    else{\r\n      this._router.navigate(['/officerlogin'])\r\n      return false;\r\n    }\r\n  }\r\n  \r\n}\r\n","<div class=\"d-flex justify-content-center m-3 font-weight-bold text-light\">\r\n    <h2>Complaints</h2> \r\n </div>\r\n <br>\r\n <br>\r\n \r\n <div class=\"m-3\">\r\n     <table class=\"table table-striped text-light\">\r\n         <thead>\r\n           <tr>\r\n             <th scope=\"col\">Sr.</th>\r\n             <th scope=\"col\">Name</th>\r\n             <th scope=\"col\">Landmark</th>\r\n             <th scope=\"col\">Address</th>\r\n             <th scope=\"col\">City</th>\r\n             <th scope=\"col\">Image</th>\r\n             <th scope=\"col\">Complaint Type</th>      \r\n             <th scope=\"col\">Complaint Level</th>\r\n             <th scope=\"col\">Action</th>\r\n           </tr>\r\n         </thead>\r\n         <tbody>\r\n           <tr *ngFor=\"let complaint of Complaints; let Counter = index\">\r\n              \r\n             <th scope=\"row\">{{Counter+1}}</th>\r\n             <td>{{complaint.name}}</td>\r\n             <td>{{complaint.landmark}}</td>\r\n             <td>{{complaint.address}}</td>\r\n             <td>{{complaint.city}}</td>\r\n             <td>\r\n                 <img src={{complaint.complaint_image}} height=\"100px\" width=\"100px\">\r\n             </td>\r\n             <td>{{complaint.complaint_type}}</td>\r\n             <td>{{complaint.complaint_level}}</td>\r\n             <td>\r\n                 <button routerLink=\"{{'/officer-complaint-status/'+complaint._id}}\" class=\"btn btn-primary\" type=\"button\">View Status</button>\r\n             </td>           \r\n           </tr>\r\n         </tbody>\r\n     </table>\r\n </div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ComplaintRegisteryService } from '../services/complaint-registery.service';\r\n\r\n@Component({\r\n  selector: 'app-complaint-registry',\r\n  templateUrl: './complaint-registry.component.html',\r\n  styleUrls: ['./complaint-registry.component.css']\r\n})\r\nexport class ComplaintRegistryComponent implements OnInit {\r\n\r\n  constructor(private _authComplaintRegistery:ComplaintRegisteryService, private _router:Router) { }\r\n  Complaints:any;\r\n  FilterData:any;\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.FilterData={\r\n        \"department\":localStorage.getItem(\"Officer Department\"),\r\n        \"location\":localStorage.getItem(\"Officer Location\")\r\n    }\r\n    \r\n    this._authComplaintRegistery.getComplaints(this.FilterData).subscribe\r\n    (\r\n      res=>\r\n      {\r\n        this.Complaints=res\r\n      },\r\n      err=>\r\n      {\r\n        console.log(err)\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n","<div class=\"d-flex justify-content-center m-3 font-weight-bold text-light\">\r\n    <h2>My Complaints</h2> \r\n </div>\r\n <br>\r\n <br>\r\n \r\n <div class=\"m-3\">\r\n     <table class=\"table table-striped text-light\">\r\n         <thead>\r\n           <tr>\r\n             <th scope=\"col\">Sr.</th>\r\n             <th scope=\"col\">Name</th>\r\n             <th scope=\"col\">Landmark</th>\r\n             <th scope=\"col\">Address</th>\r\n             <th scope=\"col\">City</th>\r\n             <th scope=\"col\">Image</th>\r\n             <th scope=\"col\">Complaint Type</th>      \r\n             <th scope=\"col\">Complaint Level</th>\r\n             <th scope=\"col\">Action</th>\r\n           </tr>\r\n         </thead>\r\n         <tbody>\r\n           <tr *ngFor=\"let complaint of Complaints; let Counter = index\">\r\n              \r\n             <th scope=\"row\">{{Counter+1}}</th>\r\n             <td>{{complaint.name}}</td>\r\n             <td>{{complaint.landmark}}</td>\r\n             <td>{{complaint.address}}</td>\r\n             <td>{{complaint.city}}</td>\r\n             <td>\r\n                 <img src={{complaint.complaint_image}} height=\"100px\" width=\"100px\">\r\n             </td>\r\n             <td>{{complaint.complaint_type}}</td>\r\n             <td>{{complaint.complaint_level}}</td>\r\n             <td>\r\n                 <button routerLink=\"{{'/complaintstatus/'+complaint._id}}\" class=\"btn btn-primary\" type=\"button\">View Status</button>\r\n             </td>\r\n           </tr>\r\n          \r\n         </tbody>\r\n     </table>\r\n </div>\r\n \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserComplaintsService } from '../services/user-complaints.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-complaints',\r\n  templateUrl: './user-complaints.component.html',\r\n  styleUrls: ['./user-complaints.component.css']\r\n})\r\nexport class UserComplaintsComponent implements OnInit {\r\n\r\n  Complaints\r\n  Counter=0;\r\n  constructor(private _usercomplaints:UserComplaintsService, private _router:Router) { }\r\n\r\n  ngOnInit(): void \r\n  {\r\n      this._usercomplaints.getComplaints(localStorage.getItem(\"User Email\")).subscribe\r\n      (\r\n        res=>\r\n        {\r\n          //this.Complaints=res\r\n          console.log(\"Below is complaints\")\r\n          console.log(res)\r\n        },\r\n        err=>\r\n        {\r\n          console.log(err)\r\n        }\r\n      )\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <br>\r\n    <div class=\"text-light text-center m-3\">\r\n        <h3>Users List</h3>\r\n    </div>\r\n\r\n    <br>\r\n    <div class=\"text-light m-3\">\r\n            <table class=\"table table-striped\">\r\n            <thead>\r\n            <tr>\r\n                <th scope=\"col\">Sr.</th>\r\n                <th scope=\"col\">Name</th>\r\n                <th scope=\"col\">Email</th> \r\n                <th scope=\"col\">Mobile Number</th>                    \r\n                <th scope=\"col\">Address</th>\r\n                <th scope=\"col\">Actions</th>\r\n            </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n            <tr *ngFor=\"let user of Users | paginate:{itemsPerPage:5,currentPage:p  } ; let Counter = index;\">\r\n\r\n                <td>{{Counter+1}}</td>\r\n\r\n                <td>{{user.firstname}}  {{user.lastname}} </td>\r\n\r\n                <td>\r\n                        {{user.email}}\r\n                </td>\r\n\r\n                <td>\r\n                    +91 {{user.mobile_number}}\r\n                </td>\r\n                \r\n                <td>                \r\n                        {{user.address}}\r\n                </td>  \r\n                \r\n                <td>\r\n                    <button class=\"btn btn-danger m-1\" (click)=\"deleteUser(user)\">Delete</button>\r\n                </td>\r\n            </tr>\r\n            \r\n            <!-- Pagination start here -->\r\n            <pagination-controls (pageChange)=\"p=$event\"></pagination-controls>\r\n            </tbody>\r\n        </table>\r\n\r\n    </div>\r\n\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { AdminDashService } from '../services/admin-dash.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-users-list',\r\n  templateUrl: './admin-users-list.component.html',\r\n  styleUrls: ['./admin-users-list.component.css']\r\n})\r\nexport class AdminUsersListComponent implements OnInit {\r\n\r\n  constructor(private _adminDash:AdminDashService) { }\r\n\r\n  p:number=1;\r\n  Users:any;\r\n  ngOnInit(): void \r\n  {\r\n    this._adminDash.getAllUsers().subscribe\r\n    (\r\n        res=>\r\n        {\r\n            this.Users=res\r\n        },\r\n        err=>\r\n        {\r\n\r\n        }\r\n    )\r\n  }\r\n\r\n  deleteUser(user)\r\n  {\r\n    this._adminDash.deleteUser(user).subscribe\r\n    (\r\n        res=>\r\n        {\r\n          \r\n          this.ngOnInit();\r\n        },\r\n      err=>\r\n        {\r\n          console.log(err)\r\n        }\r\n    )\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AdminAuthService } from 'src/app/admin/services/admin-auth.service';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { Department } from '../officer-register/Department';\r\nimport { Location } from '../officer-register/Location';\r\nimport { OfficerAuthService } from '../services/officer-auth.service';\r\n\r\n@Component({\r\n  selector: 'app-officer-login',\r\n  templateUrl: './officer-login.component.html',\r\n  styleUrls: ['./officer-login.component.css']\r\n})\r\nexport class OfficerLoginComponent implements OnInit {\r\n\r\n  constructor(private _auth:OfficerAuthService, private _router:Router, private _adminAuth:AdminAuthService,private _userAuth:AuthService) { }\r\n\r\n  somthingWrong:boolean=false;\r\n  OfficerLoginForm:FormGroup;\r\n\r\n\r\n  Locations:Location[];\r\n  Departments:Department[];\r\n\r\n  LocationSelected:any;\r\n  DepartmentSelected:any;\r\n  closeDangerAlert()\r\n  {\r\n      this.somthingWrong=false;\r\n  }\r\n\r\n  ngOnInit(): void \r\n  {\r\n\r\n    this.Locations=[\r\n      {Id:1,Name:\"Ahmedabad\"},\r\n      {Id:2,Name:\"Mumbai\"},\r\n      {Id:3,Name:\"New Delhi\"},\r\n      {Id:4,Name:\"Noida\"},\r\n      {Id:5,Name:\"Goa\"},\r\n      {Id:6,Name:\"Pune\"},\r\n    ]\r\n\r\n    this.Departments=[\r\n      {Id:1,Name:\"Street Light\"},\r\n      {Id:2,Name:\"Pipe Leakage\"},\r\n      {Id:3,Name:\"Rain Water\"},\r\n      {Id:4,Name:\"Garbage\"},\r\n    ]\r\n    this.OfficerLoginForm=new FormGroup\r\n    (\r\n          {\r\n              'Email':new FormControl(null,[Validators.required,Validators.email]),\r\n              'Password':new FormControl(null,Validators.required),\r\n              'Location':new FormControl(null,[Validators.required]),\r\n              'Department':new FormControl(null,[Validators.required])\r\n          }\r\n    );\r\n  }\r\n\r\n\r\n  onChangeLocation(event): void \r\n  { \r\n    this.LocationSelected= event.target.value;\r\n    if(this.LocationSelected == 'null')\r\n    {\r\n      this.OfficerLoginForm.controls['Location'].setErrors({ invalid: true });\r\n    }\r\n  }\r\n\r\n  onChangeDepartment(event): void \r\n  { \r\n    this.DepartmentSelected= event.target.value;\r\n    if(this.DepartmentSelected == 'null')\r\n    {\r\n      this.OfficerLoginForm.controls['Department'].setErrors({ invalid: true });\r\n    }\r\n  }\r\n\r\n  onOfficerLoginSubmit()\r\n  {\r\n    if(this.OfficerLoginForm.valid)\r\n    {\r\n \r\n        var OfficerData={}\r\n        OfficerData={\r\n          \"Email\":this.OfficerLoginForm.value.Email,\r\n          \"Password\":this.OfficerLoginForm.value.Password,\r\n          \"Location\":this.Locations[(this.OfficerLoginForm.value.Location)-1].Name,\r\n          \"Department\":this.Departments[(this.OfficerLoginForm.value.Department)-1].Name\r\n        }\r\n     \r\n         this._auth.loginOfficer(OfficerData).subscribe\r\n         (\r\n             res=>{\r\n                 \r\n              localStorage.setItem('Officer Token',res['token']);\r\n              localStorage.setItem('Officer Email',res['email']);\r\n              localStorage.setItem('Officer Department',res['department']);\r\n              localStorage.setItem('Officer Location',res['location']);\r\n              this.OfficerLoginForm.reset();\r\n              this._adminAuth.logoutAdmin();\r\n              this._userAuth.logoutUser();\r\n              this._router.navigate(['/officer-dashboard'])\r\n                 },\r\n             err=>{\r\n                   \r\n                     this.somthingWrong=true;\r\n                     console.log(err)\r\n                 }\r\n         )    \r\n     }\r\n     else\r\n     {\r\n         this.OfficerLoginForm.get('Name').markAsTouched();\r\n         this.OfficerLoginForm.get('Password').markAsTouched();\r\n         this.OfficerLoginForm.get('Location').markAsTouched();\r\n         this.OfficerLoginForm.get('Department').markAsTouched();\r\n         return;\r\n     }\r\n  }\r\n\r\n}\r\n","<div class=\"container text-white\">\r\n\r\n    <h2 class=\"text-center p-3\">Officer Login</h2>\r\n    \r\n  \r\n    <div *ngIf=\"somthingWrong\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n      <strong>Danger!</strong> Something went wrong\r\n      <button (click)=\"closeDangerAlert()\" type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n  \r\n  \r\n  <form class=\"m-5\" [formGroup]=\"OfficerLoginForm\" (ngSubmit)=\"onOfficerLoginSubmit()\">\r\n      \r\n      <div class=\"form-group\">\r\n        <label for=\"email\">Email</label>\r\n        <input formControlName=\"Email\" type=\"email\" class=\"form-control\" id=\"email\" name=\"email\" placeholder=\"Enter your email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\">\r\n        <span\r\n        *ngIf=\"!OfficerLoginForm.get('Email').valid && OfficerLoginForm.get('Email').touched\"\r\n         class=\"text-danger\">Enter email here... </span>\r\n      </div>\r\n  \r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input formControlName=\"Password\" type=\"password\" class=\"form-control\" id=\"password\" name=\"password\" placeholder=\"Enter your password\">\r\n        <span\r\n        *ngIf=\"!OfficerLoginForm.get('Password').valid && OfficerLoginForm.get('Password').touched\"\r\n         class=\"text-danger\">Enter Password here... </span>\r\n  \r\n    </div>\r\n    <br>\r\n    <select formControlName=\"Location\" name=\"Location\" class=\"form-control form-select\" (change)=\"onChangeLocation($event)\">\r\n       \r\n     <option value=null selected>Select Location</option>\r\n     <option *ngFor=\"let Location of Locations\" [value]=\"Location.Id\">\r\n         {{Location.Name}}\r\n       </option>\r\n       \r\n    </select>\r\n    <br>\r\n\r\n    <br>\r\n       <select formControlName=\"Department\" name=\"Department\" class=\"form-control form-select\" (change)=\"onChangeDepartment($event)\">\r\n          \r\n        <option value=null selected>Select Department</option>\r\n        <option *ngFor=\"let Department of Departments\" [value]=\"Department.Id\">\r\n            {{Department.Name}}\r\n          </option>\r\n          \r\n       </select>\r\n       <br>\r\n     \r\n       <button type=\"reset\" class=\"btn btn-danger\">Reset</button>\r\n       <button type=\"submit\" class=\"btn btn-primary m-3\">Login</button>\r\n  </form>\r\n  </div>     ","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from '../services/auth.service';\r\nimport Swal from 'sweetalert2'\r\n\r\n@Component({\r\n  selector: 'app-user-register',\r\n  templateUrl: './user-register.component.html',\r\n  styleUrls: ['./user-register.component.css']\r\n})\r\nexport class UserRegisterComponent implements OnInit {\r\n\r\n  RegSuccess:boolean=false;\r\n  somthingWrong:boolean=false;\r\n  EmailIsUsedError:boolean=false;\r\n  RegistrationForm:FormGroup;\r\n\r\n  closeSuccessAlert()\r\n  {\r\n      this.RegSuccess=false;\r\n  }\r\n  closeDangerAlert()\r\n  {\r\n      this.somthingWrong=false;\r\n  }\r\n  constructor(private _auth:AuthService) { }\r\n\r\n  ngOnInit(): void \r\n  {\r\n      this.RegistrationForm=new FormGroup\r\n      (\r\n            {\r\n                'FirstName':new FormControl(null,Validators.required),\r\n                'LastName':new FormControl(null,Validators.required),\r\n                'Email':new FormControl(null,[Validators.required,Validators.email]),\r\n                'Password':new FormControl(null,[Validators.required,Validators.minLength(5)]),\r\n                'MobileNumber':new FormControl(null,[Validators.required]),\r\n                'Address':new FormControl(null,Validators.required)\r\n            }\r\n      );\r\n  }\r\n  onRegisterSubmit(){\r\n  \r\n   if(this.RegistrationForm.valid)\r\n   {\r\n        this._auth.registerUser(this.RegistrationForm.value).subscribe\r\n        (\r\n            res=>{\r\n                    Swal.fire(\"Good job!\", \"Registration Successfully Done!\", \"success\");\r\n                    this.RegSuccess=true; \r\n                    this.somthingWrong=false;\r\n                    this.EmailIsUsedError=false;\r\n                    this.RegistrationForm.reset();\r\n                    console.log(res)\r\n                    \r\n                },\r\n            err=>{\r\n\r\n                        if(err.status==404)\r\n                        {\r\n                        this.somthingWrong=true\r\n                        this.RegSuccess=false; \r\n                        }\r\n                        if(err.status==401)\r\n                        {\r\n                        this.EmailIsUsedError=true\r\n                        }\r\n                            console.log(err)\r\n                    \r\n                }\r\n        )    \r\n    }\r\n    else\r\n    {\r\n        this.RegistrationForm.get('FirstName').markAsTouched();\r\n        this.RegistrationForm.get('LastName').markAsTouched();\r\n        this.RegistrationForm.get('Email').markAsTouched();\r\n        this.RegistrationForm.get('Password').markAsTouched();\r\n        this.RegistrationForm.get('MobileNumber').markAsTouched();\r\n        this.RegistrationForm.get('Address').markAsTouched();\r\n        return;\r\n    }\r\n        \r\n  }\r\n}\r\n","<div class=\"container text-white\">\r\n\r\n      <h2 class=\"text-center p-3\">User Registration</h2>\r\n\r\n\r\n      <div *ngIf=\"RegSuccess\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n        <strong>Success!</strong> You are now registered \r\n        <button (click)=\"closeSuccessAlert()\" type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n\r\n      <div *ngIf=\"somthingWrong\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n        <strong>Danger!</strong> Something went wrong\r\n        <button (click)=\"closeDangerAlert()\" type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n\r\n\r\n    \r\n    <form class=\"m-5\" [formGroup]=\"RegistrationForm\" (ngSubmit)=\"onRegisterSubmit()\">\r\n        <div class=\"form-group\">\r\n          <label for=\"firstname\">First Name</label>\r\n          <input formControlName=\"FirstName\"  type=\"text\" class=\"form-control\" id=\"firstname\" placeholder=\"Enter your first name\">\r\n          <span\r\n          *ngIf=\"!RegistrationForm.get('FirstName').valid && RegistrationForm.get('FirstName').touched\"\r\n           class=\"text-danger\">Enter first name here.. </span>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"lastname\">Last Name</label>\r\n            <input formControlName=\"LastName\"  type=\"text\" class=\"form-control\" id=\"lastname\" placeholder=\"Enter your last name\">\r\n            <span\r\n            *ngIf=\"!RegistrationForm.get('LastName').valid && RegistrationForm.get('LastName').touched\"\r\n             class=\"text-danger\">Enter last name here.. </span>\r\n          </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"email\">Email</label>\r\n          <input formControlName=\"Email\"  type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Enter your email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\">\r\n          <span\r\n          *ngIf=\"!RegistrationForm.get('Email').valid && RegistrationForm.get('Email').touched\"\r\n           class=\"text-danger\">Enter valid email here.. </span>\r\n           <div  *ngIf=\"EmailIsUsedError\" class=\"text-danger\">\r\n            Sorry email is already in use!\r\n          </div>\r\n           \r\n        </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"password\">Password</label>\r\n            <input formControlName=\"Password\" type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Enter your email\">\r\n            <span\r\n          *ngIf=\"!RegistrationForm.get('Password').valid && RegistrationForm.get('Password').touched\"\r\n           class=\"text-danger\">Password must be at least 5 characters. </span>\r\n\r\n          </div>\r\n        <div class=\"form-group\">\r\n            <label for=\"mobile_number\">Mobile Number</label>\r\n            <input formControlName=\"MobileNumber\"  type=\"number\" class=\"form-control\" id=\"mobile_number\" placeholder=\"Enter your mobile number\">\r\n            <span\r\n            *ngIf=\"!RegistrationForm.get('MobileNumber').valid && RegistrationForm.get('MobileNumber').touched\"\r\n             class=\"text-danger\">Enter mobile number here </span>\r\n        </div>\r\n\r\n        \r\n        <div class=\"form-group\">\r\n          <label for=\"address\">Address</label>\r\n          <textarea formControlName=\"Address\" class=\"form-control\" id=\"address\" rows=\"3\" placeholder=\"Enter your address\"></textarea>\r\n          <span\r\n            *ngIf=\"!RegistrationForm.get('Address').valid && RegistrationForm.get('Address').touched\"\r\n             class=\"text-danger\">Enter address here </span>\r\n         </div>\r\n         \r\n         <button type=\"reset\" class=\"btn btn-danger\">Reset</button>\r\n         <button type=\"submit\"  class=\"btn btn-primary m-3\">Register</button>\r\n    </form>\r\n</div>  ","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminAuthService {\r\n\r\n  constructor(private http:HttpClient,private router:Router) { }\r\n  admin_login_URL=\"api/admlogin\"\r\n  adminLogin(admin)\r\n  {\r\n    return this.http.post(this.admin_login_URL,admin);\r\n    //return this.http.post(this.admin_login_URL,admin, {responseType: 'text' });\r\n  }\r\n  adminLoggedIn()\r\n  {\r\n    //return true if token exist or returns false\r\n    return !!localStorage.getItem('Admin Token');\r\n  }\r\n  logoutAdmin()\r\n  {\r\n    localStorage.removeItem('Admin Token');\r\n    localStorage.removeItem('Admin Email');\r\n    this.router.navigate(['/login']) \r\n  }\r\n  getToken()\r\n  {\r\n    return localStorage.getItem('Admin Token')\r\n  }\r\n\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AdminLoginComponent } from './admin-login/admin-login.component';\r\nimport { AdminDashboardComponent } from './admin-dashboard/admin-dashboard.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AdmTokenIntercepterService } from './services/adm-token-intercepter.service';\r\nimport { AdminReportComponent } from './admin-report/admin-report.component';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\nimport { AdminUsersListComponent } from './admin-users-list/admin-users-list.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [AdminLoginComponent, AdminDashboardComponent, AdminReportComponent, AdminUsersListComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    NgxPaginationModule,\r\n    Ng2SearchPipeModule \r\n  ],\r\n  exports:[\r\n    AdminLoginComponent,\r\n    AdminDashboardComponent\r\n  ],\r\n  providers:[\r\n    {\r\n      provide:HTTP_INTERCEPTORS,\r\n      useClass:AdmTokenIntercepterService,\r\n      multi:true\r\n    },]\r\n})\r\nexport class AdminModule { }\r\n","<nav class=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n  <a class=\"navbar-brand\" [routerLink]=\"['/']\">Online CMS</a>\r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n      <ul class=\"navbar-nav mr-auto\">\r\n          <li class=\"nav-item \">\r\n              <a [routerLink]=\"['/']\" class=\"nav-link\" href=\"#\">Home </a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n              <a class=\"nav-link\" [routerLink]=\"['/about']\">About Us</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a *ngIf=\"_auth.loggedIn()\" class=\"nav-link\"  [routerLink]=\"['/dashboard']\">Dashboard</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a *ngIf=\"_adminAuth.adminLoggedIn()\" class=\"nav-link\"  [routerLink]=\"['/admdashboard']\">Dashboard</a>\r\n          </li>\r\n          <li class=\"nav-item\">\r\n            <a *ngIf=\"_officerAuth.OfficerLoggedIn()\" class=\"nav-link\"  [routerLink]=\"['/officer-dashboard']\">Dashboard</a>\r\n          </li>\r\n      </ul>\r\n\r\n      <ul class=\"navbar-nav\">\r\n            <li class=\"nav-item\">\r\n                <a *ngIf=\"!_auth.loggedIn() && !_adminAuth.adminLoggedIn() && !_officerAuth.OfficerLoggedIn()\" class=\"nav-link\" href=\"#\" [routerLink]=\"['/login']\">Login</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a *ngIf=\"!_auth.loggedIn() && !_adminAuth.adminLoggedIn() && !_officerAuth.OfficerLoggedIn()\" class=\"nav-link\" href=\"#\" [routerLink]=\"['/register']\">Register</a>\r\n            </li>\r\n\r\n            <li class=\"nav-item\">\r\n              <a *ngIf=\"_auth.loggedIn()\" (click)=\"_auth.logoutUser()\" class=\"nav-link\" href=\"#\" [routerLink]=\"['/register']\">Logout</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n                <a *ngIf=\"_adminAuth.adminLoggedIn()\" (click)=\"_adminAuth.logoutAdmin()\" class=\"nav-link\" href=\"#\" [routerLink]=\"['/admlogin']\">Admin Logout</a>\r\n            </li>\r\n            <li class=\"nav-item\">\r\n              <a *ngIf=\"_officerAuth.OfficerLoggedIn()\" (click)=\"_officerAuth.logoutOfficer()\" class=\"nav-link\" href=\"#\" [routerLink]=\"['/officerlogin']\">Officer Logout</a>\r\n          </li>\r\n      </ul>\r\n\r\n  </div>\r\n</nav>","import { Component, OnInit } from '@angular/core';\r\nimport { AdminAuthService } from '../admin/services/admin-auth.service';\r\nimport { OfficerAuthService } from '../officer/services/officer-auth.service';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n\r\n  constructor(public _auth:AuthService,public _adminAuth:AdminAuthService, public _officerAuth:OfficerAuthService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private registration_URL=\"api/register\";\r\n  private login_URL=\"api/login\";\r\n  private postComplaint_URL=\"api/complaint\";\r\n  private getUser_URL=\"api/userprofile/\"\r\n  private UserUpdate_URL=\"api/updateuser/\"\r\n\r\n  constructor(private http:HttpClient,private router:Router) { }\r\n\r\n  postComplaint(complaint)\r\n  {\r\n    return this.http.post(this.postComplaint_URL,complaint,{responseType: 'text'})\r\n  }\r\n  registerUser(user)\r\n  {\r\n    return this.http.post(this.registration_URL,user, {responseType: 'text' });\r\n    \r\n  }\r\n  loginUser(user)\r\n  {\r\n    //return this.http.post(this.login_URL,user, {responseType: 'text' });\r\n    return this.http.post(this.login_URL,user);\r\n  }\r\n\r\n  loggedIn()\r\n  {\r\n    //return true if token exist or returns false\r\n    return !!localStorage.getItem('User Token');\r\n  }\r\n  getToken()\r\n  {\r\n    return localStorage.getItem('User Token')\r\n  }\r\n\r\n  getUser(email)\r\n  {\r\n    return this.http.get(this.getUser_URL+email)\r\n  }\r\n\r\n\r\n\r\n  updateUser(data)\r\n  {\r\n    return this.http.patch(this.UserUpdate_URL+data._id,data)\r\n  }\r\n\r\n\r\n  logoutUser()\r\n  {\r\n    localStorage.removeItem('User Token');\r\n    localStorage.removeItem('User Email');\r\n    this.router.navigate(['/login']) \r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { OfficerAuthService } from '../services/officer-auth.service';\r\nimport { Department } from './Department';\r\nimport { Location } from './Location';\r\n\r\n@Component({\r\n  selector: 'app-officer-register',\r\n  templateUrl: './officer-register.component.html',\r\n  styleUrls: ['./officer-register.component.css']\r\n})\r\nexport class OfficerRegisterComponent implements OnInit {\r\n\r\n  constructor(private _auth:OfficerAuthService) { }\r\n  RegSuccess:boolean=false;\r\n  somthingWrong:boolean=false;\r\n\r\n  OfficerRegisterForm:FormGroup;\r\n\r\n  Locations:Location[];\r\n  Departments:Department[];\r\n\r\n  LocationSelected:any;\r\n  DepartmentSelected:any;\r\n  closeSuccessAlert()\r\n  {\r\n      this.RegSuccess=false;\r\n  }\r\n  closeDangerAlert()\r\n  {\r\n      this.somthingWrong=false;\r\n  }\r\n  ngOnInit(): void {\r\n\r\n\r\n    this.Locations=[\r\n      {Id:1,Name:\"Ahmedabad\"},\r\n      {Id:2,Name:\"Mumbai\"},\r\n      {Id:3,Name:\"New Delhi\"},\r\n      {Id:4,Name:\"Noida\"},\r\n      {Id:5,Name:\"Goa\"},\r\n      {Id:6,Name:\"Pune\"},\r\n    ]\r\n\r\n    this.Departments=[\r\n      {Id:1,Name:\"Street Light\"},\r\n      {Id:2,Name:\"Pipe Leakage\"},\r\n      {Id:3,Name:\"Rain Water\"},\r\n      {Id:4,Name:\"Garbage\"},\r\n    ]\r\n\r\n\r\n\r\n    this.OfficerRegisterForm=new FormGroup({\r\n\r\n                'Name':new FormControl(null,Validators.required),               \r\n                'Email':new FormControl(null,[Validators.required,Validators.email]),\r\n                'Password':new FormControl(null,[Validators.required,Validators.minLength(5)]),\r\n                'MobileNumber':new FormControl(null,[Validators.required]),\r\n                'Location':new FormControl(null,[Validators.required]),\r\n                'Department':new FormControl(null,[Validators.required])\r\n    })\r\n  }\r\n\r\n  onChangeLocation(event): void \r\n  { \r\n    this.LocationSelected= event.target.value;\r\n    if(this.LocationSelected == 'null')\r\n    {\r\n      this.OfficerRegisterForm.controls['Location'].setErrors({ invalid: true });\r\n    }\r\n  }\r\n\r\n  onChangeDepartment(event): void \r\n  { \r\n    this.DepartmentSelected= event.target.value;\r\n    if(this.DepartmentSelected == 'null')\r\n    {\r\n      this.OfficerRegisterForm.controls['Department'].setErrors({ invalid: true });\r\n    }\r\n  }\r\n  onOfficerRegisterSubmit()\r\n  {\r\n    if(this.OfficerRegisterForm.valid)\r\n   {\r\n\r\n    var OfficerData={}\r\n    OfficerData={\r\n      \"Name\":this.OfficerRegisterForm.value.Name,\r\n      \"Email\":this.OfficerRegisterForm.value.Email,\r\n      \"Password\":this.OfficerRegisterForm.value.Password,\r\n      \"MobileNumber\":this.OfficerRegisterForm.value.MobileNumber,\r\n      \"Location\":this.Locations[(this.OfficerRegisterForm.value.Location)-1].Name,\r\n      \"Department\":this.Departments[(this.OfficerRegisterForm.value.Department)-1].Name\r\n    }\r\n    \r\n        this._auth.registerOfficer(OfficerData).subscribe\r\n        (\r\n            res=>{\r\n                this.RegSuccess=true; \r\n                this.somthingWrong=false;\r\n                    this.OfficerRegisterForm.reset();\r\n                    console.log(res)\r\n                },\r\n            err=>{\r\n                    this.RegSuccess=false; \r\n                    this.somthingWrong=true;\r\n                    console.log(err)\r\n                }\r\n        )    \r\n    }\r\n    else\r\n    {\r\n        this.OfficerRegisterForm.get('Name').markAsTouched();\r\n        \r\n        this.OfficerRegisterForm.get('Email').markAsTouched();\r\n        this.OfficerRegisterForm.get('Password').markAsTouched();\r\n        this.OfficerRegisterForm.get('MobileNumber').markAsTouched();\r\n        this.OfficerRegisterForm.get('Location').markAsTouched();\r\n        this.OfficerRegisterForm.get('Department').markAsTouched();\r\n        return;\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"container text-white\">\r\n\r\n  <h2 class=\"text-center p-3\">Create Officer Account</h2>\r\n\r\n\r\n  <div *ngIf=\"RegSuccess\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n    <strong>Success!</strong> You are now created \r\n    <button (click)=\"closeSuccessAlert()\" type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n\r\n  <div *ngIf=\"somthingWrong\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n    <strong>Danger!</strong> Something went wrong\r\n    <button (click)=\"closeDangerAlert()\" type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n      <span aria-hidden=\"true\">&times;</span>\r\n    </button>\r\n  </div>\r\n\r\n\r\n\r\n<form class=\"m-5\" [formGroup]=\"OfficerRegisterForm\" (ngSubmit)=\"onOfficerRegisterSubmit()\">\r\n    <div class=\"form-group\">\r\n      <label for=\"firstname\">Name</label>\r\n      <input formControlName=\"Name\"  type=\"text\" class=\"form-control\" id=\"firstname\" placeholder=\"Enter your first name\">\r\n      <span\r\n      *ngIf=\"!OfficerRegisterForm.get('Name').valid && OfficerRegisterForm.get('Name').touched\"\r\n       class=\"text-danger\">Enter first name here.. </span>\r\n    </div>\r\n   \r\n    <div class=\"form-group\">\r\n      <label for=\"email\">Email</label>\r\n      <input formControlName=\"Email\"  type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Enter your email\" pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\">\r\n      <span\r\n      *ngIf=\"!OfficerRegisterForm.get('Email').valid && OfficerRegisterForm.get('Email').touched\"\r\n       class=\"text-danger\">Enter valid email here.. </span>\r\n       \r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"password\">Password</label>\r\n        <input formControlName=\"Password\" type=\"password\" class=\"form-control\" id=\"password\" placeholder=\"Enter your email\">\r\n        <span\r\n      *ngIf=\"!OfficerRegisterForm.get('Password').valid && OfficerRegisterForm.get('Password').touched\"\r\n       class=\"text-danger\">Password must be at least 5 characters. </span>\r\n\r\n      </div>\r\n    <div class=\"form-group\">\r\n        <label for=\"mobile_number\">Mobile Number</label>\r\n        <input formControlName=\"MobileNumber\"  type=\"number\" class=\"form-control\" id=\"mobile_number\" placeholder=\"Enter your mobile number\">\r\n        <span\r\n        *ngIf=\"!OfficerRegisterForm.get('MobileNumber').valid && OfficerRegisterForm.get('MobileNumber').touched\"\r\n         class=\"text-danger\">Enter mobile number here </span>\r\n    </div>\r\n\r\n    \r\n    <br>\r\n    <select formControlName=\"Location\" name=\"Location\" class=\"form-control form-select\" (change)=\"onChangeLocation($event)\">\r\n       \r\n     <option value=null selected>Select Location</option>\r\n     <option *ngFor=\"let Location of Locations\" [value]=\"Location.Id\">\r\n         {{Location.Name}}\r\n       </option>\r\n       \r\n    </select>\r\n    <br>\r\n\r\n    <br>\r\n       <select formControlName=\"Department\" name=\"Department\" class=\"form-control form-select\" (change)=\"onChangeDepartment($event)\">\r\n          \r\n        <option value=null selected>Select Department</option>\r\n        <option *ngFor=\"let Department of Departments\" [value]=\"Department.Id\">\r\n            {{Department.Name}}\r\n          </option>\r\n          \r\n       </select>\r\n       <br>\r\n     \r\n     <button type=\"reset\" class=\"btn btn-danger\">Reset</button>\r\n     <button type=\"submit\"  class=\"btn btn-primary m-3\">Register</button>\r\n</form>\r\n</div>  ","import { HttpInterceptor } from '@angular/common/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { AdminAuthService } from './admin-auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdmTokenIntercepterService implements HttpInterceptor{\r\n\r\n  constructor(private injector:Injector) { }\r\n\r\n  intercept(req, next)\r\n  {\r\n          let authService =this.injector.get(AdminAuthService);\r\n          let tokenizedReq=req.clone({\r\n            setHeaders:{\r\n              Authorization:'Bearear '+authService.getToken()\r\n              \r\n            }\r\n          })\r\n          console.log(\"Admin toke :\"+authService.getToken())\r\n\r\n          return next.handle(tokenizedReq);\r\n  }\r\n}","import { HttpErrorResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { OfficerAuthService } from '../services/officer-auth.service';\r\n\r\n@Component({\r\n  selector: 'app-officer-dashboard',\r\n  templateUrl: './officer-dashboard.component.html',\r\n  styleUrls: ['./officer-dashboard.component.css']\r\n})\r\nexport class OfficerDashboardComponent implements OnInit {\r\n\r\n  constructor(private _OfficerDash:OfficerAuthService, private _route:Router) { }\r\n\r\n  ngOnInit(): void \r\n  {\r\n    this._OfficerDash.getDashboard().subscribe\r\n    (\r\n      res=>\r\n      { \r\n      },\r\n      err=>\r\n      {\r\n        if(err instanceof HttpErrorResponse)\r\n              {\r\n                if(err.status ===401)\r\n                {\r\n                  console.log(err)\r\n                    this._route.navigate(['/officerlogin']);\r\n                }\r\n              }\r\n      }\r\n\r\n    )\r\n\r\n  }\r\n\r\n\r\n  complaintRegistry()\r\n  {\r\n    this._route.navigate(['/complaint-registry'])\r\n  }\r\n  \r\n\r\n  officerReport()\r\n  {\r\n    this._route.navigate(['/officer-report'])\r\n  }\r\n}\r\n","<br>\r\n<div class=\"container text-white\">\r\n    \r\n    <div class=\"row\">\r\n        <div (click)=\"complaintRegistry()\" class=\"col-sm m-3 text-center\">\r\n            <img src=\"assets/Images/dashboard/message.png\" height=\"60px\" width=\"60px\">\r\n            <h4>Complaint Registry</h4>\r\n        </div>\r\n\r\n        <div (click)=\"officerReport()\" class=\"col-sm m-3 text-center\">\r\n            <img src=\"assets/Images/dashboard/report.png\" height=\"60px\" width=\"60px\">\r\n            <h4>Report</h4>\r\n        </div>\r\n      </div> \r\n</div>","<div class=\"container\">\r\n        <br>\r\n        <div class=\"text-light text-center m-3\">\r\n            <h3>Complaint Status</h3>\r\n        </div>\r\n\r\n        <div class=\"text-light m-3\">\r\n\r\n\r\n        <h4><b>Name : </b> <span>{{Complaint_Status.name}}</span></h4>  <br/>\r\n        <h4><b>Status : </b> <span>{{Complaint_Status.complaint_status}}</span> </h4>  <br/>\r\n        <h4><b>Complaint Image : </b> <img src={{Complaint_Status.complaint_image}} width=\"200\" height=\"200\"> </h4> <br/>\r\n\r\n        <div *ngIf=\"Complaint_Status.reason\">\r\n            <h4><b>Reason : </b><span>{{Complaint_Status.reason}}</span></h4>  <br/>\r\n            <h4><b>Solutions : </b> <span>{{Complaint_Status.solution}}</span></h4>  <br/>\r\n            <h4><b>Complaint Proof : </b> <img src={{Complaint_Status.officer_proof}} width=\"200\" height=\"200\"> </h4> <br/>\r\n        </div>\r\n\r\n        </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { UserComplaintsService } from '../services/user-complaints.service';\r\n\r\n@Component({\r\n  selector: 'app-complaint-status',\r\n  templateUrl: './complaint-status.component.html',\r\n  styleUrls: ['./complaint-status.component.css']\r\n})\r\nexport class ComplaintStatusComponent implements OnInit {\r\n\r\n  constructor(private _activityrouter:ActivatedRoute, private _complaintStatusService:UserComplaintsService) { }\r\n\r\n  Complaint_Status:any;\r\n  Complaint_ID:any;\r\n  ngOnInit(): void\r\n   {\r\n        this._activityrouter.paramMap.subscribe(\r\n          (params: any) => {\r\n            this.Complaint_ID= params.get('id');\r\n          }\r\n        )\r\n        this._complaintStatusService.getComplaintStatus(this.Complaint_ID).subscribe(\r\n          res=>\r\n          {\r\n            this.Complaint_Status=res[0]\r\n            \r\n          },\r\n          err=>\r\n          {\r\n            console.log(err);\r\n          }\r\n\r\n        )\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router} from '@angular/router';\r\nimport { AuthService } from './services/auth.service';\r\n\r\n\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  \r\n  constructor(private _authService:AuthService, private _router:Router)\r\n  {}\r\n\r\n  canActivate(): boolean\r\n  {\r\n    if(this._authService.loggedIn())\r\n    {\r\n      return true;\r\n    }\r\n    else{\r\n      this._router.navigate(['/login'])\r\n      return false;\r\n    }\r\n  }\r\n  \r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserDashboardService {\r\n\r\n  private _userDashboardURL=\"api/dash\";\r\n  constructor(private http:HttpClient) { }\r\n\r\n  getDashboard()\r\n  {\r\n    return this.http.get(this._userDashboardURL)\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n    <br>\r\n    <div class=\"text-light text-center m-3\">\r\n        <h3>All Department Report</h3>\r\n    </div>\r\n\r\n    <br>\r\n    <div class=\"text-light m-3\">\r\n        \r\n        <table>\r\n            <tr>\r\n              <td><h4><b>Pending :   </b> </h4></td>\r\n              <td><h5>{{PendingCount}}</h5></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><h4><b>On Progress :   </b> </h4></td>\r\n                <td><h5>{{OnProgressCount}}</h5></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><h4><b>Rejected :   </b> </h4></td>\r\n                <td><h5>{{RejectedCount}}</h5></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td><h4><b>Completed :   </b> </h4></td>\r\n                <td><h5>{{CompletedCount}}</h5></td>\r\n            </tr>\r\n              \r\n          </table>\r\n    </div>\r\n\r\n    <br>\r\n    <div class=\"text-light text-center m-3\">\r\n        <h3>Search By City</h3>\r\n        <br>\r\n\r\n\r\n      <nav class=\"navbar\">\r\n        <input class=\"form-control\" name=\"city\" placeholder=\"Enter city name\" [(ngModel)]=\"city\" (ngModelChange)=\"searchCity()\">\r\n      </nav>\r\n      <br>\r\n      <br>\r\n        <table class=\"table table-striped\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">Sr.</th>\r\n                <th scope=\"col\">Name</th>\r\n                <th scope=\"col\">Landmark</th>\r\n                <th scope=\"col\">Address</th>\r\n                <th scope=\"col\">City</th>\r\n                <th scope=\"col\">Image</th>\r\n                <th scope=\"col\">Type</th>      \r\n                <th scope=\"col\">Level</th>\r\n                <th scope=\"col\">Status</th>  \r\n                <th scope=\"col\">Officer Proof</th> \r\n                <th scope=\"col\">Reason</th> \r\n                <th scope=\"col\">Solution</th>    \r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let complaint of ComplaintsCopy | paginate:{itemsPerPage:5,currentPage:p}; let Counter = index; \">\r\n              \r\n                    <th scope=\"row\">{{Counter+1}}</th>\r\n                    <td>{{complaint.name}}</td>\r\n                    <td>{{complaint.landmark}}</td>\r\n                    <td>{{complaint.address}}</td>\r\n                    <td>{{complaint.city}}</td>\r\n                    <td>\r\n                        <img src={{complaint.complaint_image}} height=\"100px\" width=\"100px\">\r\n                    </td>\r\n                    <td>{{complaint.complaint_type}}</td>\r\n                    <td>{{complaint.complaint_level}}</td>\r\n                    <td>{{complaint.complaint_status}}</td>\r\n                    <td>\r\n                        <div *ngIf=\"complaint.officer_proof; else NoImageUploads\">\r\n                          <img src={{complaint.officer_proof}} height=\"100px\" width=\"100px\">\r\n                        </div>\r\n                        <ng-template #NoImageUploads>\r\n                          Image Not Uploaded\r\n                        </ng-template>\r\n                        \r\n                    </td>\r\n\r\n                    <td>{{complaint.reason}}</td>\r\n                    <td>{{complaint.solution}}</td>\r\n                  </tr>\r\n\r\n                  <pagination-controls (pageChange)=\"p=$event\"></pagination-controls>\r\n            </tbody>\r\n          </table>\r\n    \r\n    </div>\r\n\r\n    \r\n   \r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { AdminDashService } from '../services/admin-dash.service';\r\n\r\n@Component({\r\n  selector: 'app-admin-report',\r\n  templateUrl: './admin-report.component.html',\r\n  styleUrls: ['./admin-report.component.css']\r\n})\r\nexport class AdminReportComponent implements OnInit {\r\n  Complaints:any;\r\n  ComplaintsCopy:any;\r\n  constructor(private _adminservices:AdminDashService) { }\r\n\r\n  PendingCount:number=0;\r\n  OnProgressCount:number=0;\r\n  RejectedCount:number=0;\r\n  CompletedCount:number=0;\r\n  p:number=1;\r\n  city:string;\r\n\r\n  ngOnInit(): void {\r\n    this._adminservices.getAllComplaints().subscribe\r\n    (\r\n      res=>\r\n        {\r\n          this.Complaints=res\r\n          this.ComplaintsCopy=res\r\n          for (let complaint of this.Complaints)\r\n          {\r\n            if(complaint.complaint_status==\"On Progress\")\r\n            this.OnProgressCount=this.OnProgressCount+1;\r\n            else if(complaint.complaint_status==\"Pending\")\r\n            this.PendingCount=this.PendingCount+1;\r\n            else if(complaint.complaint_status==\"Rejected\")\r\n            this.RejectedCount=this.RejectedCount+1;\r\n            else if(complaint.complaint_status==\"Completed\")\r\n            this.CompletedCount=this.CompletedCount+1;\r\n          }\r\n        },\r\n        err=>\r\n        {\r\n          console.log(err)\r\n        }\r\n    )\r\n  }\r\n\r\n  searchCity()\r\n  {\r\n    if(this.city!=\"\")\r\n    {\r\n      this.ComplaintsCopy=this.ComplaintsCopy.filter(res=>{\r\n        return res.city.match(this.city);\r\n      })\r\n    }\r\n    else\r\n    this.ngOnInit()\r\n   \r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AboutComponent } from './about/about.component';\r\nimport { AdmAuthGuard } from './admin/adm-auth.guard';\r\nimport { AdminDashboardComponent } from './admin/admin-dashboard/admin-dashboard.component';\r\nimport { AdminLoginComponent } from './admin/admin-login/admin-login.component';\r\nimport { AdminReportComponent } from './admin/admin-report/admin-report.component';\r\nimport { AdminUsersListComponent } from './admin/admin-users-list/admin-users-list.component';\r\n\r\nimport { AuthGuard } from './auth.guard';\r\nimport { ComplaintFormComponent } from './complaint-form/complaint-form.component';\r\nimport { ComplaintStatusComponent } from './complaint-status/complaint-status.component';\r\n\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ComplaintRegistryComponent } from './officer/complaint-registry/complaint-registry.component';\r\nimport { OfficerAuthGuardGuard } from './officer/officer-auth-guard.guard';\r\nimport { OfficerComplaintStatusComponent } from './officer/officer-complaint-status/officer-complaint-status.component';\r\nimport { OfficerDashboardComponent } from './officer/officer-dashboard/officer-dashboard.component';\r\nimport { OfficerLoginComponent } from './officer/officer-login/officer-login.component';\r\nimport { OfficerRegisterComponent } from './officer/officer-register/officer-register.component';\r\nimport { OfficerReportComponent } from './officer/officer-report/officer-report.component';\r\n\r\nimport { UserComplaintsComponent } from './user-complaints/user-complaints.component';\r\nimport { UserLoginComponent } from './user-login/user-login.component';\r\nimport { UserProfileComponent } from './user-profile/user-profile.component';\r\nimport { UserRegisterComponent } from './user-register/user-register.component';\r\n\r\nconst routes: Routes = [\r\n  {path:\"\",component:HomeComponent},\r\n  {path:\"login\",component:UserLoginComponent},\r\n  {path:\"register\",component:UserRegisterComponent},\r\n  {path:\"about\",component:AboutComponent},\r\n  {path:\"mycomplaints\",component:UserComplaintsComponent,\r\n  canActivate:[AuthGuard]},\r\n  {path:\"dashboard\",component:DashboardComponent,\r\n  canActivate:[AuthGuard]},\r\n  {path:\"complaint\",component:ComplaintFormComponent,\r\n  canActivate:[AuthGuard]},\r\n  {path:\"profile\",component:UserProfileComponent,\r\n  canActivate:[AuthGuard]},\r\n  {path:\"complaintstatus/:id\",component:ComplaintStatusComponent,\r\n  canActivate:[AuthGuard]},\r\n  {path:\"admlogin\",component:AdminLoginComponent},\r\n  {path:\"officerlogin\",component:OfficerLoginComponent},\r\n\r\n  {path:\"admdashboard\",component:AdminDashboardComponent,\r\n  canActivate:[AdmAuthGuard]},\r\n  {path:\"officer-dashboard\",component:OfficerDashboardComponent\r\n  ,canActivate:[OfficerAuthGuardGuard]},\r\n  {path:\"complaint-registry\",component:ComplaintRegistryComponent\r\n  ,canActivate:[OfficerAuthGuardGuard]},\r\n  \r\n  {path:\"officer-complaint-status/:id\",component:OfficerComplaintStatusComponent\r\n  ,canActivate:[OfficerAuthGuardGuard]},\r\n  {path:\"officer-report\",component:OfficerReportComponent\r\n  ,canActivate:[OfficerAuthGuardGuard]},\r\n\r\n  {path:\"officerregister\",component:OfficerRegisterComponent,\r\n  canActivate:[AdmAuthGuard]},\r\n  {path:\"all-users\",component:AdminUsersListComponent,\r\n  canActivate:[AdmAuthGuard]},\r\n  {path:\"admin-report\",component:AdminReportComponent,\r\n  canActivate:[AdmAuthGuard]},\r\n \r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OfficerAuthService {\r\n\r\n  Officer_Registration_URL=\"api/officer_register\"\r\n  Officer_Login_URL=\"api/officer_login\"\r\n  Officer_Dash_URL=\"api/officerdash\"\r\n  constructor(private http:HttpClient, private router:Router) { }\r\n\r\n\r\n  getDashboard()\r\n  {\r\n    return this.http.get(this.Officer_Dash_URL)\r\n  }\r\n\r\n\r\n  loginOfficer(officer)\r\n  {\r\n    \r\n    return this.http.post(this.Officer_Login_URL,officer);\r\n  }\r\n\r\n  OfficerLoggedIn()\r\n  {\r\n    //return true if token exist or returns false\r\n    return !!localStorage.getItem('Officer Token');\r\n  }\r\n  logoutOfficer()\r\n  {\r\n    localStorage.removeItem('Officer Token');\r\n    localStorage.removeItem('Officer Email');\r\n    this.router.navigate(['/officerlogin']) \r\n  }\r\n  getToken()\r\n  {\r\n    return localStorage.getItem('Officer Token')\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  registerOfficer(officer)\r\n  {\r\n    return this.http.post(this.Officer_Registration_URL,officer, {responseType: 'text' });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OfficerComplaintStatusService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n  getcomplaints_URL=\"api/complaints/\"\r\n  getcomplaintStatus_URL=\"api/officercomplaintstatus/\"\r\n  updateComplaint_URL=\"api/updatecomplaint/\"\r\n  getComplaints(email)\r\n  {\r\n    return this.http.get(this.getcomplaints_URL+email)\r\n  }\r\n\r\n  getComplaintStatus(id)\r\n  {\r\n    return this.http.get(this.getcomplaintStatus_URL+id)\r\n  }\r\n\r\n  updateComplaintStatus(complaint)\r\n  {\r\n    return this.http.patch(this.updateComplaint_URL+complaint.get('_id'),complaint,{responseType: 'text'})\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup ,FormControl,Validators} from '@angular/forms';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Complaint_Level } from './complaint_level';\r\nimport { Complaint_Types } from './complaint_types';\r\nimport Swal from 'sweetalert2'\r\n\r\n@Component({\r\n  selector: 'app-complaint-form',\r\n  templateUrl: './complaint-form.component.html',\r\n  styleUrls: ['./complaint-form.component.css']\r\n})\r\nexport class ComplaintFormComponent implements OnInit {\r\n\r\n  complaintForm:FormGroup;\r\n  RegSuccess:boolean=false;\r\n  somthingWrong:boolean=false;\r\n  imageSizeError:boolean=false;\r\n  Extentions:string;\r\n  imageURL=\"\";\r\n  complaintImageFile:any;\r\n  \r\n  Complaints:Complaint_Types[];\r\n  ComplaintLevels:Complaint_Level[];\r\n  ComplaintSelected:any;\r\n\r\n  \r\n  ComplaintLevelSelected:any;\r\n\r\n  constructor(private _auth:AuthService) { }\r\n\r\n  ngOnInit(): void \r\n  {\r\n      \r\n    this.Complaints=[\r\n      {Id:1,Name:\"Street Light\"},\r\n      {Id:2,Name:\"Pipe Leakage\"},\r\n      {Id:3,Name:\"Rain Water\"},\r\n      {Id:4,Name:\"Garbage\"},\r\n    ]\r\n\r\n    this.ComplaintLevels=[\r\n      \r\n      {Id:1,Level:\"Low\"},\r\n      {Id:2,Level:\"Medium\"},\r\n      {Id:3,Level:\"High\"},\r\n    ]\r\n\r\n\r\n\r\n      this.complaintForm=new FormGroup\r\n      (\r\n            {\r\n                'Name':new FormControl(null,Validators.required),\r\n                'Landmark':new FormControl(null,Validators.required),\r\n                'Address':new FormControl(null,Validators.required),\r\n                'City':new FormControl(null,Validators.required),   \r\n                'Complaint':new FormControl(null,Validators.required),\r\n                'Complaint_Type':new FormControl(null,Validators.required),\r\n                'Complaint_Level':new FormControl(null,Validators.required),\r\n                'Complaint_Image':new FormControl(null,Validators.required)\r\n    \r\n            }\r\n      );     \r\n  }\r\n  onChangeComplaintType(event): void \r\n  { \r\n    this.ComplaintSelected= event.target.value;\r\n    if(this.ComplaintSelected == 'null')\r\n    {\r\n      this.complaintForm.controls['Complaint_Type'].setErrors({ invalid: true });\r\n    }\r\n    \r\n    \r\n  }\r\n  onChangeComplaintLevel(event): void \r\n  { \r\n    this.ComplaintLevelSelected= event.target.value;\r\n    if(this.ComplaintLevelSelected == 'null')\r\n    {\r\n      this.complaintForm.controls['Complaint_Level'].setErrors({ invalid: true });\r\n      \r\n    }\r\n  }\r\n\r\n  onImageSelected(event)\r\n  {\r\n    this.complaintImageFile=<File>event.target.files[0]\r\n    \r\n    // File Preview\r\n      var reader = new FileReader();\r\n      reader.onload = () => {\r\n        this.imageURL = reader.result as string;\r\n      }\r\n      this.Extentions=this.complaintImageFile.name.split('.').pop()\r\n      console.log(this.complaintImageFile)\r\n      if(this.Extentions.toUpperCase()=='JPG' || this.Extentions.toUpperCase()=='JPEG' || this.Extentions.toUpperCase()=='PNG')\r\n        reader.readAsDataURL(this.complaintImageFile)\r\n      else\r\n      {\r\n        this.imageURL=null\r\n        this.complaintForm.controls['Complaint_Image'].setErrors({ invalid: true });\r\n      }\r\n  }\r\n  onComplaintsSubmit()\r\n  {\r\n    if(this.complaintForm.valid)\r\n    {\r\n      var ComplaintsData=new FormData();\r\n      ComplaintsData.append(\"Email\",localStorage.getItem('User Email'))\r\n      ComplaintsData.append(\"Name\",this.complaintForm.value.Name)\r\n      ComplaintsData.append(\"Landmark\",this.complaintForm.value.Landmark)\r\n\r\n      ComplaintsData.append(\"Address\",this.complaintForm.value.Address)\r\n\r\n      ComplaintsData.append(\"City\",this.complaintForm.value.City)\r\n\r\n      ComplaintsData.append(\"Complaint\",this.complaintForm.value.Complaint)\r\n      ComplaintsData.append(\"Complaint_Level\",this.ComplaintLevels[(this.complaintForm.value.Complaint_Level)-1].Level)\r\n      ComplaintsData.append(\"Complaint_Type\",this.Complaints[(this.complaintForm.value.Complaint_Type)-1].Name)\r\n\r\n      ComplaintsData.append(\"Complaint_Image\",this.complaintImageFile)\r\n      \r\n      \r\n      this._auth.postComplaint(ComplaintsData).subscribe\r\n      (\r\n        res=>{\r\n          \r\n          Swal.fire(\"Good job!\", \"Complaint Successfully Post!\", \"success\");\r\n                  this.RegSuccess=true; \r\n                  this.somthingWrong=false;\r\n                  this.imageSizeError=false;\r\n                  this.imageURL=null\r\n                  this.complaintForm.reset();\r\n          },\r\n      err=>{\r\n\r\n            if(err.status==413)\r\n            {\r\n              this.imageSizeError=true;\r\n            }\r\n            else\r\n            {\r\n              this.RegSuccess=false; \r\n              this.somthingWrong=true;\r\n              console.log(err)\r\n            }\r\n              \r\n          }\r\n      )\r\n    }\r\n    else\r\n    {\r\n      this.complaintForm.get('Name').markAsTouched();\r\n      this.complaintForm.get('Landmark').markAsTouched();\r\n      this.complaintForm.get('Address').markAsTouched();\r\n      this.complaintForm.get('City').markAsTouched();\r\n      this.complaintForm.get('Complaint').markAsTouched();\r\n      this.complaintForm.get('Complaint_Level').markAsTouched();\r\n      this.complaintForm.get('Complaint_Type').markAsTouched();\r\n      this.complaintForm.get('Complaint_Image').markAsTouched();\r\n    }\r\n  }\r\n}","<div class=\"container text-white\">\r\n\r\n    <h2 class=\"text-center p-3\">User Complaint</h2>\r\n\r\n\r\n    <div *ngIf=\"RegSuccess\" class=\"alert alert-success alert-dismissible fade show\" role=\"alert\">\r\n      <strong>Success!</strong> Complaint Successfully Post! \r\n      <button (click)=\"closeSuccessAlert()\" type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n\r\n    <div *ngIf=\"somthingWrong\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\r\n      <strong>Danger!</strong> Something went wrong\r\n      <button (click)=\"closeDangerAlert()\" type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n\r\n\r\n  \r\n  <form class=\"m-2\" [formGroup]=\"complaintForm\" (ngSubmit)=\"onComplaintsSubmit()\">\r\n      <div class=\"form-group\">\r\n        <label for=\"Name\">Name</label>\r\n        <input formControlName=\"Name\"  type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Enter your name\">\r\n        <span\r\n        *ngIf=\"!complaintForm.get('Name').valid && complaintForm.get('Name').touched\"\r\n         class=\"text-danger\">Enter name here... </span>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"Landmark\">Landmark</label>\r\n        <input formControlName=\"Landmark\" class=\"form-control\" id=\"Landmark\" rows=\"3\" placeholder=\"Enter your landmark\">\r\n        <span\r\n          *ngIf=\"!complaintForm.get('Landmark').valid && complaintForm.get('Landmark').touched\"\r\n           class=\"text-danger\">Enter landmark here... </span>\r\n       </div>\r\n\r\n       <div class=\"form-group\">\r\n        <label for=\"Address\">Address</label>\r\n        <input formControlName=\"Address\" class=\"form-control\" id=\"Address\" rows=\"3\" placeholder=\"Enter your address\">\r\n        <span\r\n          *ngIf=\"!complaintForm.get('Address').valid && complaintForm.get('Address').touched\"\r\n           class=\"text-danger\">Enter address here... </span>\r\n       </div>\r\n\r\n       <div class=\"form-group\">\r\n        <label for=\"City\">City</label>\r\n        <input formControlName=\"City\" class=\"form-control\" id=\"City\" rows=\"3\" placeholder=\"Enter your city\">\r\n        <span\r\n          *ngIf=\"!complaintForm.get('City').valid && complaintForm.get('City').touched\"\r\n           class=\"text-danger\">Enter city here... </span>\r\n       </div>\r\n\r\n       \r\n        \r\n       <br>\r\n       <select formControlName=\"Complaint_Type\" name=\"Complaint_Type\" class=\"form-control form-select\" (change)=\"onChangeComplaintType($event)\">\r\n          \r\n        <option value=null selected>Select complaint type</option>\r\n        <option *ngFor=\"let Complaint of Complaints\" [value]=\"Complaint.Id\">\r\n            {{Complaint.Name}}\r\n          </option>\r\n          \r\n       </select>\r\n       <br>\r\n       \r\n\r\n       <div class=\"form-group\">\r\n        <label for=\"Complaint\">Complaint</label>\r\n        <input formControlName=\"Complaint\" class=\"form-control\" id=\"Complaint\" rows=\"3\" placeholder=\"Enter your complaint\">\r\n        <span\r\n          *ngIf=\"!complaintForm.get('Complaint').valid && complaintForm.get('Complaint').touched\"\r\n           class=\"text-danger\">Enter complaint here... </span>\r\n       </div>\r\n\r\n       <br>\r\n\r\n       <select formControlName=\"Complaint_Level\" name=\"Complaint_Level\" class=\"form-control form-select\" (change)=\"onChangeComplaintLevel($event)\" >\r\n        <option value=null selected>Select complaint Level</option>\r\n        <option *ngFor=\"let ComplaintLevel of ComplaintLevels\" [value]=\"ComplaintLevel.Id\">\r\n            {{ComplaintLevel.Level}}\r\n          </option>\r\n          \r\n       </select>\r\n        \r\n      <br>\r\n\r\n      <div class=\"form-group\">\r\n        <label >Upload Image</label>\r\n        <input formControlName=\"Complaint_Image\" type=\"file\"(change)=\"onImageSelected($event)\" class=\"form-control\" name=\"Complaint_Image\">\r\n        <span\r\n          *ngIf=\"!complaintForm.get('Complaint_Image').valid && complaintForm.get('Complaint_Image').touched\"\r\n           class=\"text-danger\">Please choose only image... </span>\r\n           <span\r\n          *ngIf=\"imageSizeError\"\r\n           class=\"text-danger\">Please insert Below 1MB File Size.  </span>\r\n    </div>\r\n\r\n     <!-- Image Preview -->\r\n  <div class=\"imagePreview\" *ngIf=\"imageURL && imageURL !== ''\">\r\n    <img [src]=\"imageURL\" height=\"150px\" width=\"150px\" [alt]=\"complaintForm.value.name\">\r\n  </div>\r\n\r\n     <br>\r\n\r\n     \r\n\r\n       <button type=\"reset\" class=\"btn btn-danger\">Reset</button>\r\n       <button type=\"submit\"  class=\"btn btn-primary m-3\">Register</button>\r\n  </form>\r\n  \r\n</div>  ","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}